{"version":3,"sources":["../../src/radio.tsx"],"names":["chakra","forwardRef","layoutPropNames","omitThemingProps","useMultiStyleConfig","callAll","split","__DEV__","React","useRadioGroupContext","useRadio","Radio","props","ref","onChange","onChangeProp","value","valueProp","group","styles","spacing","children","isFullWidth","rest","isChecked","name","getInputProps","getCheckboxProps","getLabelProps","htmlProps","layoutProps","otherProps","checkboxProps","inputProps","labelProps","rootStyles","width","undefined","display","alignItems","verticalAlign","container","checkboxStyles","justifyContent","flexShrink","control","labelStyles","userSelect","ml","label","displayName"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  layoutPropNames,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { callAll, split, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useRadioGroupContext } from \"./radio-group\"\nimport { useRadio, UseRadioProps } from \"./use-radio\"\n\ntype Omitted = \"onChange\" | \"defaultChecked\" | \"checked\"\ninterface BaseControlProps extends Omit<HTMLChakraProps<\"div\">, Omitted> {}\n\nexport interface RadioProps\n  extends UseRadioProps,\n    ThemingProps,\n    BaseControlProps {\n  /**\n   * The spacing between the checkbox and its label text\n   * @default 0.5rem\n   * @type SystemProps[\"marginLeft\"]\n   */\n  spacing?: SystemProps[\"marginLeft\"]\n  /**\n   * If `true`, the radio will occupy the full width of its parent container\n   *\n   * @deprecated\n   * This component defaults to 100% width,\n   * please use the props `maxWidth` or `width` to configure\n   */\n  isFullWidth?: boolean\n}\n\n/**\n * Radio component is used in forms when a user needs to select a single value from\n * several options.\n *\n * @see Docs https://chakra-ui.com/docs/form/radio\n */\nexport const Radio = forwardRef<RadioProps, \"input\">((props, ref) => {\n  const { onChange: onChangeProp, value: valueProp } = props\n\n  const group = useRadioGroupContext()\n  const styles = useMultiStyleConfig(\"Radio\", { ...group, ...props })\n\n  const {\n    spacing = \"0.5rem\",\n    children,\n    isFullWidth,\n    ...rest\n  } = omitThemingProps(props)\n\n  let isChecked = props.isChecked\n  if (group?.value && valueProp) {\n    isChecked = group.value === valueProp\n  }\n\n  let onChange = onChangeProp\n  if (group?.onChange && valueProp) {\n    onChange = callAll(group.onChange, onChangeProp)\n  }\n\n  const name = props?.name ?? group?.name\n\n  const {\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    htmlProps,\n  } = useRadio({\n    ...rest,\n    isChecked,\n    onChange,\n    name,\n  })\n\n  const [layoutProps, otherProps] = split(htmlProps, layoutPropNames as any)\n\n  const checkboxProps = getCheckboxProps(otherProps)\n  const inputProps = getInputProps({}, ref)\n  const labelProps = getLabelProps()\n\n  const rootStyles = {\n    width: isFullWidth ? \"full\" : undefined,\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    ...styles.container,\n  }\n\n  const checkboxStyles = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexShrink: 0,\n    ...styles.control,\n  }\n\n  const labelStyles: SystemStyleObject = {\n    userSelect: \"none\",\n    ml: spacing,\n    ...styles.label,\n  }\n\n  return (\n    <chakra.label className=\"chakra-radio\" {...layoutProps} __css={rootStyles}>\n      <input className=\"chakra-radio__input\" {...inputProps} />\n      <chakra.div\n        className=\"chakra-radio__control\"\n        {...checkboxProps}\n        __css={checkboxStyles}\n      />\n      {children && (\n        <chakra.div\n          className=\"chakra-radio__label\"\n          {...labelProps}\n          __css={labelStyles}\n        >\n          {children}\n        </chakra.div>\n      )}\n    </chakra.label>\n  )\n})\n\nif (__DEV__) {\n  Radio.displayName = \"Radio\"\n}\n"],"file":"radio.js"}