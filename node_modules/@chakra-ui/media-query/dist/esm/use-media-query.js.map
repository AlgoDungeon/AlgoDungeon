{"version":3,"sources":["../../src/use-media-query.ts"],"names":["React","isBrowser","useSafeLayoutEffect","useLayoutEffect","useEffect","useMediaQuery","query","queries","Array","isArray","isSupported","window","matches","setMatches","useState","map","matchMedia","undefined","mediaQueryList","listenerList","mediaQuery","index","listener","prev","prevValue","idx","addListener","forEach","removeListener"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,IAAMC,mBAAmB,GAAGD,SAAS,GAAGD,KAAK,CAACG,eAAT,GAA2BH,KAAK,CAACI,SAAtE;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA4D;AACjE,MAAMC,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA/C;AACA,MAAMI,WAAW,GAAGT,SAAS,IAAI,gBAAgBU,MAAjD;AAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACc,QAAN,CAC5BP,OAAO,CAACQ,GAAR,CAAaT,KAAD,IACVI,WAAW,GAAG,CAAC,CAACC,MAAM,CAACK,UAAP,CAAkBV,KAAlB,EAAyBM,OAA9B,GAAwC,KADrD,CAD4B,CAA9B;AAMAV,EAAAA,mBAAmB,CAAC,MAAM;AACxB,QAAI,CAACQ,WAAL,EAAkB,OAAOO,SAAP;AAElB,QAAMC,cAAc,GAAGX,OAAO,CAACQ,GAAR,CAAaT,KAAD,IAAWK,MAAM,CAACK,UAAP,CAAkBV,KAAlB,CAAvB,CAAvB;AAEA,QAAMa,YAAY,GAAGD,cAAc,CAACH,GAAf,CAAmB,CAACK,UAAD,EAAaC,KAAb,KAAuB;AAC7D,UAAMC,QAAQ,GAAG,MACfT,UAAU,CAAEU,IAAD,IACTA,IAAI,CAACR,GAAL,CAAS,CAACS,SAAD,EAAYC,GAAZ,KACPJ,KAAK,KAAKI,GAAV,GAAgB,CAAC,CAACL,UAAU,CAACR,OAA7B,GAAuCY,SADzC,CADQ,CADZ;;AAOAJ,MAAAA,UAAU,CAACM,WAAX,CAAuBJ,QAAvB;AAEA,aAAOA,QAAP;AACD,KAXoB,CAArB;AAaA,WAAO,MAAM;AACXJ,MAAAA,cAAc,CAACS,OAAf,CAAuB,CAACP,UAAD,EAAaC,KAAb,KAAuB;AAC5CD,QAAAA,UAAU,CAACQ,cAAX,CAA0BT,YAAY,CAACE,KAAD,CAAtC;AACD,OAFD;AAGD,KAJD;AAKD,GAvBkB,EAuBhB,CAACf,KAAD,CAvBgB,CAAnB;AAyBA,SAAOM,OAAP;AACD","sourcesContent":["import * as React from \"react\"\nimport { isBrowser } from \"@chakra-ui/utils\"\n\nconst useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\nexport function useMediaQuery(query: string | string[]): boolean[] {\n  const queries = Array.isArray(query) ? query : [query]\n  const isSupported = isBrowser && \"matchMedia\" in window\n\n  const [matches, setMatches] = React.useState(\n    queries.map((query) =>\n      isSupported ? !!window.matchMedia(query).matches : false,\n    ),\n  )\n\n  useSafeLayoutEffect(() => {\n    if (!isSupported) return undefined\n\n    const mediaQueryList = queries.map((query) => window.matchMedia(query))\n\n    const listenerList = mediaQueryList.map((mediaQuery, index) => {\n      const listener = () =>\n        setMatches((prev) =>\n          prev.map((prevValue, idx) =>\n            index === idx ? !!mediaQuery.matches : prevValue,\n          ),\n        )\n\n      mediaQuery.addListener(listener)\n\n      return listener\n    })\n\n    return () => {\n      mediaQueryList.forEach((mediaQuery, index) => {\n        mediaQuery.removeListener(listenerList[index])\n      })\n    }\n  }, [query])\n\n  return matches\n}\n"],"file":"use-media-query.js"}