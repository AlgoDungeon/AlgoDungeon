{"version":3,"sources":["../../src/chakra-provider.tsx"],"names":["CSSReset","PortalManager","ColorModeProvider","GlobalStyle","ThemeProvider","defaultTheme","React","ChakraProvider","props","children","colorModeManager","portalZIndex","resetCSS","theme","config"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SACEC,iBADF,EAGEC,WAHF,EAIEC,aAJF,QAKO,mBALP;AAMA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAgCA;AACA;AACA;AACA;AACA,OAAO,IAAMC,cAAc,GAAIC,KAAD,IAAgC;AAC5D,MAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,gBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,QAAQ,GAAG,IAJP;AAKJC,IAAAA,KAAK,GAAGR;AALJ,MAMFG,KANJ;AAQA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEK;AAAtB,kBACE,oBAAC,iBAAD;AACE,IAAA,gBAAgB,EAAEH,gBADpB;AAEE,IAAA,OAAO,EAAEG,KAAK,CAACC;AAFjB,KAIGF,QAAQ,iBAAI,oBAAC,QAAD,OAJf,eAKE,oBAAC,WAAD,OALF,EAMGD,YAAY,gBACX,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEA;AAAvB,KAAsCF,QAAtC,CADW,GAGXA,QATJ,CADF,CADF;AAgBD,CAzBM","sourcesContent":["import CSSReset from \"@chakra-ui/css-reset\"\nimport { PortalManager } from \"@chakra-ui/portal\"\nimport {\n  ColorModeProvider,\n  ColorModeProviderProps,\n  GlobalStyle,\n  ThemeProvider,\n} from \"@chakra-ui/system\"\nimport defaultTheme from \"@chakra-ui/theme\"\nimport { Dict } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface ChakraProviderProps {\n  /**\n   * a theme. if omitted, uses the default theme provided by chakra\n   */\n  theme?: Dict\n  /**\n   * Common z-index to use for `Portal`\n   *\n   * @default undefined\n   */\n  portalZIndex?: number\n  /**\n   * If `true`, `CSSReset` component will be mounted to help\n   * you reset browser styles\n   *\n   * @default true\n   */\n  resetCSS?: boolean\n  /**\n   * manager to persist a users color mode preference in\n   *\n   * omit if you don't render server-side\n   * for SSR: choose `cookieStorageManager`\n   *\n   * @default localStorageManager\n   */\n  colorModeManager?: ColorModeProviderProps[\"colorModeManager\"]\n  children?: React.ReactNode\n}\n\n/**\n * The global provider that must be added to make all Chakra components\n * work correctly\n */\nexport const ChakraProvider = (props: ChakraProviderProps) => {\n  const {\n    children,\n    colorModeManager,\n    portalZIndex,\n    resetCSS = true,\n    theme = defaultTheme,\n  } = props\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ColorModeProvider\n        colorModeManager={colorModeManager}\n        options={theme.config}\n      >\n        {resetCSS && <CSSReset />}\n        <GlobalStyle />\n        {portalZIndex ? (\n          <PortalManager zIndex={portalZIndex}>{children}</PortalManager>\n        ) : (\n          children\n        )}\n      </ColorModeProvider>\n    </ThemeProvider>\n  )\n}\n"],"file":"chakra-provider.js"}