{"version":3,"sources":["../../src/popper.utils.ts"],"names":["getBoxShadow","placement","color","undefined","includes","transformEnum","top","bottom","left","right","toTransformOrigin","getArrowStyles","options","arrowSize","popperArrowStyles","styles","width","height","zIndex","offsetAdjust","startsWith"],"mappings":";;;;;;;;AAGO,SAASA,YAAT,CAAsBC,SAAtB,EAA4CC,KAA5C,EAA4D;AACjE,MAAI,CAACA,KAAL,EAAY,OAAOC,SAAP;;AAEZ,MAAIF,SAAS,CAACG,QAAV,CAAmB,KAAnB,CAAJ,EAA+B;AAC7B,8BAAwBF,KAAxB;AACD;;AAED,MAAID,SAAS,CAACG,QAAV,CAAmB,QAAnB,CAAJ,EAAkC;AAChC,gCAA0BF,KAA1B;AACD;;AAED,MAAID,SAAS,CAACG,QAAV,CAAmB,OAAnB,CAAJ,EAAiC;AAC/B,+BAAyBF,KAAzB;AACD;;AAED,MAAID,SAAS,CAACG,QAAV,CAAmB,MAAnB,CAAJ,EAAgC;AAC9B,+BAAyBF,KAAzB;AACD;;AAED,SAAOC,SAAP;AACD;;AAED,IAAME,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,eADe;AAEpB,eAAa,aAFO;AAGpB,aAAW,cAHS;AAKpBC,EAAAA,MAAM,EAAE,YALY;AAMpB,kBAAgB,UANI;AAOpB,gBAAc,WAPM;AASpBC,EAAAA,IAAI,EAAE,cATc;AAUpB,gBAAc,WAVM;AAWpB,cAAY,cAXQ;AAapBC,EAAAA,KAAK,EAAE,aAba;AAcpB,iBAAe,UAdK;AAepB,eAAa;AAfO,CAAtB;;AAkBO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACT,SAAD;AAAA,SAC/BI,aAAa,CAACJ,SAAD,CADkB;AAAA,CAA1B;;;;AASA,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAmC;AAAA,MACvDC,SADuD,GACND,OADM,CACvDC,SADuD;AAAA,8BACND,OADM,CAC5CE,iBAD4C;AAAA,MAC5CA,iBAD4C,sCACxB,EADwB;AAAA,MACpBb,SADoB,GACNW,OADM,CACpBX,SADoB;;AAG/D,MAAMc,MAAqB,gBACtBD,iBADsB;AAEzBE,IAAAA,KAAK,EAAEH,SAFkB;AAGzBI,IAAAA,MAAM,EAAEJ,SAHiB;AAIzBK,IAAAA,MAAM,EAAE,CAAC;AAJgB,IAA3B;;AAOA,MAAMC,YAAY,GAAG,EAAEN,SAAS,GAAG,CAAd,CAArB;AAEA,MAAIZ,SAAS,CAACmB,UAAV,CAAqB,KAArB,CAAJ,EAAiCL,MAAM,CAACR,MAAP,GAAgBY,YAAhB;AACjC,MAAIlB,SAAS,CAACmB,UAAV,CAAqB,QAArB,CAAJ,EAAoCL,MAAM,CAACT,GAAP,GAAaa,YAAb;AACpC,MAAIlB,SAAS,CAACmB,UAAV,CAAqB,MAArB,CAAJ,EAAkCL,MAAM,CAACN,KAAP,GAAeU,YAAf;AAClC,MAAIlB,SAAS,CAACmB,UAAV,CAAqB,OAArB,CAAJ,EAAmCL,MAAM,CAACP,IAAP,GAAcW,YAAd;AAEnC,SAAOJ,MAAP;AACD,CAlBM","sourcesContent":["import type { CSSProperties } from \"react\"\nimport { Placement } from \"@popperjs/core\"\n\nexport function getBoxShadow(placement: Placement, color?: string) {\n  if (!color) return undefined\n\n  if (placement.includes(\"top\")) {\n    return `2px 2px 2px 0 ${color}`\n  }\n\n  if (placement.includes(\"bottom\")) {\n    return `-1px -1px 1px 0 ${color}`\n  }\n\n  if (placement.includes(\"right\")) {\n    return `-1px 1px 1px 0 ${color}`\n  }\n\n  if (placement.includes(\"left\")) {\n    return `1px -1px 1px 0 ${color}`\n  }\n\n  return undefined\n}\n\nconst transformEnum = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\",\n}\n\nexport const toTransformOrigin = (placement: Placement) =>\n  transformEnum[placement]\n\ninterface GetArrowStyleOptions {\n  arrowSize: number\n  popperArrowStyles?: CSSProperties\n  placement: Placement\n}\n\nexport const getArrowStyles = (options: GetArrowStyleOptions) => {\n  const { arrowSize, popperArrowStyles = {}, placement } = options\n\n  const styles: CSSProperties = {\n    ...popperArrowStyles,\n    width: arrowSize,\n    height: arrowSize,\n    zIndex: -1,\n  }\n\n  const offsetAdjust = -(arrowSize / 2)\n\n  if (placement.startsWith(\"top\")) styles.bottom = offsetAdjust\n  if (placement.startsWith(\"bottom\")) styles.top = offsetAdjust\n  if (placement.startsWith(\"left\")) styles.right = offsetAdjust\n  if (placement.startsWith(\"right\")) styles.left = offsetAdjust\n\n  return styles\n}\n"],"file":"popper.utils.js"}