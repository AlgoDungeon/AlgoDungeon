import { PropGetter } from "@chakra-ui/utils";
import { Modifier, Placement } from "@popperjs/core";
export type { Placement };
export interface UsePopperProps {
    gutter?: number;
    placement?: Placement;
    offset?: [number, number];
    preventOverflow?: boolean;
    fixed?: boolean;
    flip?: boolean;
    arrowSize?: number;
    arrowShadowColor?: string;
    /**
     * The distance of the arrow to its next border (numeric)
     * E.g. arrowPadding = borderRadius * 2
     */
    arrowPadding?: number;
    matchWidth?: boolean;
    modifiers?: Modifier<string, any>[];
}
export declare function usePopper(props?: UsePopperProps): {
    transformOrigin: any;
    getReferenceProps: PropGetter<any, {}>;
    getPopperProps: PropGetter<any, {}>;
    getArrowWrapperProps: PropGetter<any, {}>;
    getArrowProps: PropGetter<any, {}>;
    state: import("@popperjs/core").State | null;
    forceUpdate: (() => void) | null;
    update: (() => Promise<Partial<import("@popperjs/core").State>>) | null;
    placement: Placement;
};
export declare type UsePopperReturn = ReturnType<typeof usePopper>;
