{"version":3,"sources":["../../src/tabs.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","omit","__DEV__","React","TabsProvider","useTab","useTabIndicator","useTabList","useTabPanel","useTabPanels","useTabs","Tabs","props","ref","styles","children","className","rest","htmlProps","ctx","context","useMemo","rootProps","root","displayName","Tab","tabProps","tabStyles","outline","display","alignItems","justifyContent","tab","TabList","tablistProps","tablistStyles","tablist","TabPanel","panelProps","tabpanel","TabPanels","panelsProps","TabIndicator","indicatorStyle","style","indicator"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, omit, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport {\n  TabsProvider,\n  useTab,\n  useTabIndicator,\n  useTabList,\n  UseTabListProps,\n  UseTabOptions,\n  useTabPanel,\n  useTabPanels,\n  useTabs,\n  UseTabsProps,\n} from \"./use-tabs\"\n\ninterface TabsOptions {\n  /**\n   * If `true`, tabs will stretch to width of the tablist.\n   */\n  isFitted?: boolean\n  /**\n   * The alignment of the tabs\n   */\n  align?: \"start\" | \"end\" | \"center\"\n}\n\nexport interface TabsProps\n  extends UseTabsProps,\n    ThemingProps,\n    Omit<HTMLChakraProps<\"div\">, \"onChange\">,\n    TabsOptions {\n  children: React.ReactNode\n}\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components. It doesn't render\n * any DOM node.\n */\nexport const Tabs = forwardRef<TabsProps, \"div\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tabs\", props)\n  const { children, className, ...rest } = omitThemingProps(props)\n\n  const { htmlProps, ...ctx } = useTabs(rest)\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const rootProps = omit(htmlProps as any, [\"isFitted\"])\n\n  return (\n    <TabsProvider value={context}>\n      <StylesProvider value={styles}>\n        <chakra.div\n          className={cx(\"chakra-tabs\", className)}\n          ref={ref}\n          {...rootProps}\n          __css={styles.root}\n        >\n          {children}\n        </chakra.div>\n      </StylesProvider>\n    </TabsProvider>\n  )\n})\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\"\n}\n\nexport interface TabProps extends UseTabOptions, HTMLChakraProps<\"button\"> {}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nexport const Tab = forwardRef<TabProps, \"button\">((props, ref) => {\n  const styles = useStyles()\n  const tabProps = useTab({ ...props, ref })\n\n  const tabStyles: SystemStyleObject = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab,\n  }\n\n  return (\n    <chakra.button\n      {...tabProps}\n      className={cx(\"chakra-tabs__tab\", props.className)}\n      __css={tabStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\"\n}\n\nexport interface TabListProps\n  extends UseTabListProps,\n    Omit<HTMLChakraProps<\"div\">, \"onKeyDown\" | \"ref\"> {}\n\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\nexport const TabList = forwardRef<TabListProps, \"div\">((props, ref) => {\n  const tablistProps = useTabList({ ...props, ref })\n\n  const styles = useStyles()\n\n  const tablistStyles: SystemStyleObject = {\n    display: \"flex\",\n    ...styles.tablist,\n  }\n\n  return (\n    <chakra.div\n      {...tablistProps}\n      className={cx(\"chakra-tabs__tablist\", props.className)}\n      __css={tablistStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\"\n}\n\nexport interface TabPanelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\nexport const TabPanel = forwardRef<TabPanelProps, \"div\">((props, ref) => {\n  const panelProps = useTabPanel({ ...props, ref })\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      outline=\"0\"\n      {...panelProps}\n      className={cx(\"chakra-tabs__tab-panel\", props.className)}\n      __css={styles.tabpanel}\n    />\n  )\n})\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\"\n}\n\nexport interface TabPanelsProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nexport const TabPanels = forwardRef<TabPanelsProps, \"div\">((props, ref) => {\n  const panelsProps = useTabPanels(props)\n  return (\n    <chakra.div\n      {...panelsProps}\n      width=\"100%\"\n      ref={ref}\n      className={cx(\"chakra-tabs__tab-panels\", props.className)}\n    />\n  )\n})\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\"\n}\n\nexport interface TabIndicatorProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\nexport const TabIndicator = forwardRef<TabIndicatorProps, \"div\">(\n  (props, ref) => {\n    const indicatorStyle = useTabIndicator()\n    const style = {\n      ...props.style,\n      ...indicatorStyle,\n    }\n\n    const styles = useStyles()\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx(\"chakra-tabs__tab-indicator\", props.className)}\n        style={style}\n        __css={styles.indicator}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  TabIndicator.displayName = \"TabIndicator\"\n}\n"],"file":"tabs.js"}