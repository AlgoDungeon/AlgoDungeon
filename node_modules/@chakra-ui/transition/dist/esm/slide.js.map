{"version":3,"sources":["../../src/slide.tsx"],"names":["cx","__DEV__","AnimatePresence","motion","React","EASINGS","directions","bottom","y","baseStyle","maxWidth","left","right","top","x","width","height","variants","exit","direction","transition","duration","ease","easeInOut","enter","axis","Object","keys","type","damping","stiffness","Slide","forwardRef","props","ref","style","unmountOnExit","in","isOpen","className","rest","shouldExpand","position","displayName"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\nexport type SlideDirection = keyof typeof directions\n\nconst directions = {\n  bottom: {\n    motion: { y: \"100%\" },\n    baseStyle: {\n      maxWidth: \"100vw\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n  },\n  top: {\n    motion: { y: \"-100%\" },\n    baseStyle: {\n      maxWidth: \"100vw\",\n      top: 0,\n      left: 0,\n      right: 0,\n    },\n  },\n  left: {\n    motion: { x: \"-100%\" },\n    baseStyle: {\n      width: \"100%\",\n      height: \"100vh\",\n      left: 0,\n      top: 0,\n    },\n  },\n  right: {\n    motion: { x: \"100%\" },\n    baseStyle: {\n      width: \"100%\",\n      right: 0,\n      top: 0,\n      height: \"100vh\",\n    },\n  },\n}\n\ntype SlideVariants = MotionVariants<\"enter\" | \"exit\">\n\nconst variants: SlideVariants = {\n  exit: (direction: string) => {\n    const { motion } = directions[direction] ?? {}\n    return {\n      ...motion,\n      transition: {\n        duration: 0.15,\n        ease: EASINGS.easeInOut,\n      },\n    }\n  },\n  enter: (direction: string) => {\n    const { motion } = directions[direction] ?? {}\n    const [axis] = motion ? Object.keys(motion) : [\"x\"]\n    return {\n      [axis]: 0,\n      transition: {\n        type: \"spring\",\n        damping: 25,\n        stiffness: 180,\n      },\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n}\n\nexport interface SlideProps extends HTMLMotionProps<\"div\">, SlideOptions {}\n\nexport const Slide = React.forwardRef<HTMLDivElement, SlideProps>(\n  (props, ref) => {\n    const {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      ...rest\n    } = props\n\n    const { baseStyle } = directions[direction] ?? {}\n    const shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true\n\n    return (\n      <AnimatePresence custom={direction}>\n        {shouldExpand && (\n          <motion.div\n            ref={ref}\n            initial=\"exit\"\n            className={cx(\"chakra-slide\", className)}\n            animate={isOpen || unmountOnExit ? \"enter\" : \"exit\"}\n            exit=\"exit\"\n            custom={direction}\n            variants={variants}\n            style={{\n              position: \"fixed\",\n              ...baseStyle,\n              ...style,\n            }}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\"\n}\n"],"file":"slide.js"}