{"version":3,"sources":["../../src/fade.tsx"],"names":["cx","__DEV__","AnimatePresence","motion","React","EASINGS","variants","exit","opacity","transition","duration","ease","easeOut","enter","easeIn","fadeConfig","initial","animate","Fade","forwardRef","props","ref","unmountOnExit","in","isOpen","className","rest","shouldExpand","displayName"],"mappings":";;;;AAAA,SAASA,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,SAASC,eAAT,EAA2CC,MAA3C,QAAyD,eAAzD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwC,WAAxC;AAIA,IAAMC,QAA2B,GAAG;AAClCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVC,MAAAA,IAAI,EAAEN,OAAO,CAACO;AAFJ;AAFR,GAD4B;AAQlCC,EAAAA,KAAK,EAAE;AACLL,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVC,MAAAA,IAAI,EAAEN,OAAO,CAACS;AAFJ;AAFP;AAR2B,CAApC;AAiBA,OAAO,IAAMC,UAAoD,GAAG;AAClEC,EAAAA,OAAO,EAAE,MADyD;AAElEC,EAAAA,OAAO,EAAE,OAFyD;AAGlEV,EAAAA,IAAI,EAAE,MAH4D;AAIlED,EAAAA;AAJkE,CAA7D;AAkBP,OAAO,IAAMY,IAAI,gBAAGd,KAAK,CAACe,UAAN,CAClB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,EAAE,EAAEC,MAArB;AAA6BC,IAAAA;AAA7B,MAAoDL,KAA1D;AAAA,MAAiDM,IAAjD,iCAA0DN,KAA1D;;AACA,MAAMO,YAAY,GAAGL,aAAa,GAAGE,MAAM,IAAIF,aAAb,GAA6B,IAA/D;AAEA,sBACE,oBAAC,eAAD,QACGK,YAAY,iBACX,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEN,GADP;AAEE,IAAA,SAAS,EAAErB,EAAE,CAAC,aAAD,EAAgByB,SAAhB;AAFf,KAGMV,UAHN;AAIE,IAAA,OAAO,EAAES,MAAM,IAAIF,aAAV,GAA0B,OAA1B,GAAoC;AAJ/C,KAKMI,IALN,EAFJ,CADF;AAaD,CAlBiB,CAAb;;AAqBP,IAAIzB,OAAJ,EAAa;AACXiB,EAAAA,IAAI,CAACU,WAAL,GAAmB,MAAnB;AACD","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\ntype FadeMotionVariant = MotionVariants<\"enter\" | \"exit\">\n\nconst variants: FadeMotionVariant = {\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.1,\n      ease: EASINGS.easeOut,\n    },\n  },\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n      ease: EASINGS.easeIn,\n    },\n  },\n}\n\nexport const fadeConfig: Omit<HTMLMotionProps<any>, \"transition\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants,\n}\n\nexport interface FadeProps extends HTMLMotionProps<\"div\"> {\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n}\n\nexport const Fade = React.forwardRef<HTMLDivElement, FadeProps>(\n  (props, ref) => {\n    const { unmountOnExit, in: isOpen, className, ...rest } = props\n    const shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true\n\n    return (\n      <AnimatePresence>\n        {shouldExpand && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-fade\", className)}\n            {...fadeConfig}\n            animate={isOpen || unmountOnExit ? \"enter\" : \"exit\"}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Fade.displayName = \"Fade\"\n}\n"],"file":"fade.js"}