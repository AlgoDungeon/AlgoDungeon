{"version":3,"sources":["../../src/collapse.tsx"],"names":["useUpdateEffect","cx","warn","__DEV__","AnimatePresence","motion","React","EASINGS","hasHeightValue","value","parseInt","toString","variants","exit","props","animateOpacity","opacity","startingHeight","height","transition","duration","ease","enter","endingHeight","Collapse","forwardRef","ref","in","isOpen","unmountOnExit","style","className","onAnimationComplete","rest","fromZeroHeight","open","setOpen","useState","getInitialHidden","display","setDisplay","hidden","custom","ownProps","overflow","displayName"],"mappings":"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","sourcesContent":["import { useUpdateEffect } from \"@chakra-ui/hooks\"\nimport { cx, warn, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\ntype CollapseVariants = MotionVariants<\"enter\" | \"exit\">\n\nconst hasHeightValue = (value?: string | number) =>\n  value != null && parseInt(value.toString(), 10) > 0\n\nconst variants: CollapseVariants = {\n  exit: (props: CollapseOptions) => ({\n    ...(props.animateOpacity && {\n      opacity: hasHeightValue(props.startingHeight) ? 1 : 0,\n    }),\n    height: props.startingHeight,\n    transition: {\n      height: { duration: 0.2, ease: EASINGS.ease },\n      opacity: { duration: 0.3, ease: EASINGS.ease },\n    },\n  }),\n  enter: (props: CollapseOptions) => ({\n    ...(props.animateOpacity && {\n      opacity: 1,\n    }),\n    height: props.endingHeight,\n    transition: {\n      height: {\n        duration: 0.3,\n        ease: EASINGS.ease,\n      },\n      opacity: {\n        duration: 0.4,\n        ease: EASINGS.ease,\n      },\n    },\n  }),\n}\n\nexport interface CollapseOptions {\n  /**\n   * If `true`, the opacity of the content will be animated\n   * @default true\n   */\n  animateOpacity?: boolean\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * If `true`, the content will be expanded\n   */\n  in?: boolean\n  /**\n   * The height you want the content in its collapsed state.\n   * @default 0\n   */\n  startingHeight?: number | string\n  /**\n   * The height you want the content in its expanded state.\n   * @default \"auto\"\n   */\n  endingHeight?: number | string\n}\n\nexport type ICollapse = CollapseProps\n\ntype Display = React.CSSProperties[\"display\"]\n\nexport interface CollapseProps\n  extends HTMLMotionProps<\"div\">,\n    CollapseOptions {}\n\nexport const Collapse = React.forwardRef<HTMLDivElement, CollapseProps>(\n  (props, ref) => {\n    const {\n      in: isOpen,\n      unmountOnExit,\n      animateOpacity = true,\n      startingHeight = 0,\n      endingHeight = \"auto\",\n      style,\n      className,\n      onAnimationComplete,\n      ...rest\n    } = props\n\n    const fromZeroHeight = startingHeight === 0\n\n    const [open, setOpen] = React.useState(!!isOpen)\n\n    const getInitialHidden = () => {\n      // If it is open by default, no need to apply `aria-hidden`\n      if (isOpen) return false\n      // If startingHeight > 0, then content is partially visible\n      if (hasHeightValue(startingHeight)) return false\n      // Else, the content is hidden\n      return true\n    }\n\n    const [display, setDisplay] = React.useState<Display>(() => {\n      if (!fromZeroHeight) return \"block\"\n      const hidden = getInitialHidden()\n      return hidden ? \"none\" : \"block\"\n    })\n\n    useUpdateEffect(() => {\n      setDisplay(\"block\")\n      setOpen(!!isOpen)\n    }, [isOpen])\n\n    /**\n     * Warn ðŸš¨: `startingHeight` and `unmountOnExit` are mutually exclusive\n     *\n     * If you specify a starting height, the collapsed needs to be mounted\n     * for the height to take effect.\n     */\n    if (startingHeight > 0 && unmountOnExit) {\n      warn(\n        `startingHeight and unmountOnExit are mutually exclusive. You can't use them together`,\n      )\n    }\n\n    const custom = { startingHeight, endingHeight, animateOpacity }\n\n    const ownProps: HTMLMotionProps<\"div\"> & React.RefAttributes<any> = {\n      ref,\n      onAnimationComplete: () => {\n        if (!open && fromZeroHeight) {\n          setDisplay(\"none\")\n        }\n        onAnimationComplete?.()\n      },\n      className: cx(\"chakra-collapse\", className),\n      ...rest,\n      variants,\n      style: { overflow: \"hidden\", ...style },\n      custom,\n    }\n\n    if (unmountOnExit) {\n      return (\n        <AnimatePresence initial={false} custom={custom}>\n          {isOpen && (\n            <motion.div\n              {...ownProps}\n              initial=\"exit\"\n              animate=\"enter\"\n              exit=\"exit\"\n            />\n          )}\n        </AnimatePresence>\n      )\n    }\n\n    return (\n      <motion.div\n        {...ownProps}\n        style={{ ...ownProps.style, display }}\n        initial={false}\n        animate={open ? \"enter\" : \"exit\"}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  Collapse.displayName = \"Collapse\"\n}\n"],"file":"collapse.js"}