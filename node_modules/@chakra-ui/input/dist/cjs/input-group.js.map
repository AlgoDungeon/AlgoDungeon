{"version":3,"sources":["../../src/input-group.tsx"],"names":["InputGroup","props","ref","styles","children","className","rest","_className","groupStyles","validChildren","input","field","forEach","child","type","id","paddingLeft","height","h","paddingRight","borderRightRadius","borderLeftRadius","clones","map","pl","pr","theming","size","variant","React","cloneElement","width","display","position","__DEV__","displayName"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface InputGroupProps extends HTMLChakraProps<\"div\">, ThemingProps {}\n\nexport const InputGroup = forwardRef<InputGroupProps, \"div\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Input\", props)\n  const { children, className, ...rest } = omitThemingProps(props)\n\n  const _className = cx(\"chakra-input__group\", className)\n  const groupStyles: InputGroupProps = {}\n\n  const validChildren = getValidChildren(children)\n\n  const input: any = styles.field\n\n  validChildren.forEach((child: any) => {\n    if (!styles) return\n\n    if (input && child.type.id === \"InputLeftElement\") {\n      groupStyles.paddingLeft = input.height ?? input.h\n    }\n\n    if (input && child.type.id === \"InputRightElement\") {\n      groupStyles.paddingRight = input.height ?? input.h\n    }\n\n    if (child.type.id === \"InputRightAddon\") {\n      groupStyles.borderRightRadius = 0\n    }\n\n    if (child.type.id === \"InputLeftAddon\") {\n      groupStyles.borderLeftRadius = 0\n    }\n  })\n\n  const clones = validChildren.map((child: any) => {\n    const { pl, paddingLeft, pr, paddingRight } = child.props\n\n    /**\n     * Make it possible to override the size and variant from `Input`\n     */\n    const theming = {\n      size: child.props?.size || props.size,\n      variant: child.props?.variant || props.variant,\n    }\n\n    return child.type.id !== \"Input\"\n      ? React.cloneElement(child, theming)\n      : React.cloneElement(child, {\n          ...theming,\n          paddingLeft: pl ?? paddingLeft ?? groupStyles?.paddingLeft,\n          paddingRight: pr ?? paddingRight ?? groupStyles?.paddingRight,\n          borderLeftRadius: groupStyles?.borderLeftRadius,\n          borderRightRadius: groupStyles?.borderRightRadius,\n        })\n  })\n\n  return (\n    <chakra.div\n      className={_className}\n      ref={ref}\n      __css={{\n        width: \"100%\",\n        display: \"flex\",\n        position: \"relative\",\n      }}\n      {...rest}\n    >\n      <StylesProvider value={styles}>{clones}</StylesProvider>\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  InputGroup.displayName = \"InputGroup\"\n}\n"],"file":"input-group.js"}