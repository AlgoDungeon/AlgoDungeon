{"version":3,"sources":["../../src/input-element.tsx"],"names":["chakra","forwardRef","useStyles","cx","__DEV__","React","StyledElement","baseStyle","display","alignItems","justifyContent","position","top","zIndex","InputElement","props","ref","placement","rest","styles","input","field","elementStyles","width","height","h","fontSize","paddingX","paddingLeft","pl","id","displayName","InputLeftElement","className","_className","InputRightElement"],"mappings":";;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAIEC,SAJF,QAMO,mBANP;AAOA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAMA,IAAMC,aAAa,GAAGN,MAAM,CAAC,KAAD,EAAQ;AAClCO,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,QAAQ,EAAE,UAJD;AAKTC,IAAAA,GAAG,EAAE,GALI;AAMTC,IAAAA,MAAM,EAAE;AANC;AADuB,CAAR,CAA5B;AAWA,IAAMC,YAAY,gBAAGb,UAAU,CAA2B,CAACc,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACxE,MAAM;AAAEC,IAAAA,SAAS,GAAG;AAAd,MAAkCF,KAAxC;AAAA,MAA+BG,IAA/B,iCAAwCH,KAAxC;;AAEA,MAAMI,MAAM,GAAGjB,SAAS,EAAxB;AACA,MAAMkB,KAAU,GAAGD,MAAM,CAACE,KAA1B;AAEA,MAAMC,aAAgC,GAAG;AACvC,KAACL,SAAD,GAAa,GAD0B;AAEvCM,IAAAA,KAAK,mBAAEH,KAAF,oBAAEA,KAAK,CAAEI,MAAT,4BAAmBJ,KAAnB,oBAAmBA,KAAK,CAAEK,CAFQ;AAGvCD,IAAAA,MAAM,oBAAEJ,KAAF,oBAAEA,KAAK,CAAEI,MAAT,6BAAmBJ,KAAnB,oBAAmBA,KAAK,CAAEK,CAHO;AAIvCC,IAAAA,QAAQ,EAAEN,KAAF,oBAAEA,KAAK,CAAEM,QAJsB;AAKvCC,IAAAA,QAAQ,wBAAEP,KAAF,oBAAEA,KAAK,CAAEQ,WAAT,iCAAwBR,KAAxB,oBAAwBA,KAAK,CAAES;AALA,GAAzC;AAQA,sBAAO,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEb,GAApB;AAAyB,IAAA,KAAK,EAAEM;AAAhC,KAAmDJ,IAAnD,EAAP;AACD,CAf8B,CAA/B,C,CAiBA;;AACAJ,YAAY,CAACgB,EAAb,GAAkB,cAAlB;;AAEA,IAAI1B,OAAJ,EAAa;AACXU,EAAAA,YAAY,CAACiB,WAAb,GAA2B,cAA3B;AACD;;AAED,OAAO,IAAMC,gBAAgB,gBAAG/B,UAAU,CACxC,CAACc,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AAAEiB,IAAAA;AAAF,MAAyBlB,KAA/B;AAAA,MAAsBG,IAAtB,iCAA+BH,KAA/B;;AACA,MAAMmB,UAAU,GAAG/B,EAAE,CAAC,4BAAD,EAA+B8B,SAA/B,CAArB;;AAEA,sBACE,oBAAC,YAAD;AACE,IAAA,GAAG,EAAEjB,GADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,SAAS,EAAEkB;AAHb,KAIMhB,IAJN,EADF;AAQD,CAbuC,CAAnC,C,CAgBP;;AACAc,gBAAgB,CAACF,EAAjB,GAAsB,kBAAtB;;AAEA,IAAI1B,OAAJ,EAAa;AACX4B,EAAAA,gBAAgB,CAACD,WAAjB,GAA+B,kBAA/B;AACD;;AAED,OAAO,IAAMI,iBAAiB,gBAAGlC,UAAU,CACzC,CAACc,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AAAEiB,IAAAA;AAAF,MAAyBlB,KAA/B;AAAA,MAAsBG,IAAtB,iCAA+BH,KAA/B;;AACA,MAAMmB,UAAU,GAAG/B,EAAE,CAAC,6BAAD,EAAgC8B,SAAhC,CAArB;;AAEA,sBACE,oBAAC,YAAD;AACE,IAAA,GAAG,EAAEjB,GADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,SAAS,EAAEkB;AAHb,KAIMhB,IAJN,EADF;AAQD,CAbwC,CAApC,C,CAgBP;;AACAiB,iBAAiB,CAACL,EAAlB,GAAuB,mBAAvB;;AAEA,IAAI1B,OAAJ,EAAa;AACX+B,EAAAA,iBAAiB,CAACJ,WAAlB,GAAgC,mBAAhC;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface InputElementProps extends HTMLChakraProps<\"div\"> {\n  placement?: \"left\" | \"right\"\n}\n\nconst StyledElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2,\n  },\n})\n\nconst InputElement = forwardRef<InputElementProps, \"div\">((props, ref) => {\n  const { placement = \"left\", ...rest } = props\n\n  const styles = useStyles()\n  const input: any = styles.field\n\n  const elementStyles: SystemStyleObject = {\n    [placement]: \"0\",\n    width: input?.height ?? input?.h,\n    height: input?.height ?? input?.h,\n    fontSize: input?.fontSize,\n    paddingX: input?.paddingLeft ?? input?.pl,\n  }\n\n  return <StyledElement ref={ref} __css={elementStyles} {...rest} />\n})\n\n// This is used in `input-group.tsx`\nInputElement.id = \"InputElement\"\n\nif (__DEV__) {\n  InputElement.displayName = \"InputElement\"\n}\n\nexport const InputLeftElement = forwardRef<InputElementProps, \"div\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__left-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"left\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputLeftElement.id = \"InputLeftElement\"\n\nif (__DEV__) {\n  InputLeftElement.displayName = \"InputLeftElement\"\n}\n\nexport const InputRightElement = forwardRef<InputElementProps, \"div\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__right-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"right\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputRightElement.id = \"InputRightElement\"\n\nif (__DEV__) {\n  InputRightElement.displayName = \"InputRightElement\"\n}\n"],"file":"input-element.js"}