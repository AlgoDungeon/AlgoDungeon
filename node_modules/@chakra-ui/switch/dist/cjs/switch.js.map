{"version":3,"sources":["../../src/switch.tsx"],"names":["Switch","props","ref","styles","ownProps","state","getInputProps","getCheckboxProps","htmlProps","inputProps","checkboxProps","labelStyles","display","verticalAlign","lineHeight","trackStyles","flexShrink","justifyContent","boxSizing","cursor","track","className","thumb","isChecked","isHovered","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AASA;;AACA;;;;;;;;AASO,IAAMA,MAAM,gBAAG,wBAAiC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACrE,MAAMC,MAAM,GAAG,iCAAoB,QAApB,EAA8BF,KAA9B,CAAf;AAEA,MAAMG,QAAQ,GAAG,8BAAiBH,KAAjB,CAAjB;;AAHqE,qBAIP,2BAC5DG,QAD4D,CAJO;AAAA,MAI7DC,KAJ6D,gBAI7DA,KAJ6D;AAAA,MAItDC,aAJsD,gBAItDA,aAJsD;AAAA,MAIvCC,gBAJuC,gBAIvCA,gBAJuC;AAAA,MAIrBC,SAJqB,gBAIrBA,SAJqB;;AAQrE,MAAMC,UAAU,GAAGH,aAAa,CAAC,EAAD,EAAKJ,GAAL,CAAhC;AACA,MAAMQ,aAAa,GAAGH,gBAAgB,EAAtC;AAEA,MAAMI,WAA8B,GAAG;AACrCC,IAAAA,OAAO,EAAE,cAD4B;AAErCC,IAAAA,aAAa,EAAE,QAFsB;AAGrCC,IAAAA,UAAU,EAAE;AAHyB,GAAvC;;AAMA,MAAMC,WAA8B;AAClCH,IAAAA,OAAO,EAAE,aADyB;AAElCI,IAAAA,UAAU,EAAE,CAFsB;AAGlCC,IAAAA,cAAc,EAAE,YAHkB;AAIlCC,IAAAA,SAAS,EAAE,aAJuB;AAKlCC,IAAAA,MAAM,EAAE;AAL0B,KAM/BhB,MAAM,CAACiB,KANwB,CAApC;;AASA,sBACE,oBAAC,cAAD,CAAQ,KAAR,eACMZ,SADN;AAEE,IAAA,SAAS,EAAE,eAAG,eAAH,EAAoBP,KAAK,CAACoB,SAA1B,CAFb;AAGE,IAAA,KAAK,EAAEV;AAHT,mBAKE;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA4CF,UAA5C,EALF,eAME,oBAAC,cAAD,CAAQ,IAAR,eACMC,aADN;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,IAAA,KAAK,EAAEK;AAHT,mBAKE,oBAAC,cAAD,CAAQ,IAAR;AACE,IAAA,KAAK,EAAEZ,MAAM,CAACmB,KADhB;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,oBAAc,qBAASjB,KAAK,CAACkB,SAAf,CAHhB;AAIE,kBAAY,qBAASlB,KAAK,CAACmB,SAAf;AAJd,IALF,CANF,CADF;AAqBD,CA/CqB,CAAf;;;AAiDP,IAAIC,cAAJ,EAAa;AACXzB,EAAAA,MAAM,CAAC0B,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import { useCheckbox, UseCheckboxProps } from \"@chakra-ui/checkbox\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ntype Omitted = \"defaultChecked\" | \"checked\" | \"onChange\"\n\nexport interface SwitchProps\n  extends Omit<UseCheckboxProps, \"isIndeterminate\">,\n    Omit<HTMLChakraProps<\"label\">, Omitted>,\n    ThemingProps {}\n\nexport const Switch = forwardRef<SwitchProps, \"input\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Switch\", props)\n\n  const ownProps = omitThemingProps(props)\n  const { state, getInputProps, getCheckboxProps, htmlProps } = useCheckbox(\n    ownProps,\n  )\n\n  const inputProps = getInputProps({}, ref)\n  const checkboxProps = getCheckboxProps()\n\n  const labelStyles: SystemStyleObject = {\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    lineHeight: \"normal\",\n  }\n\n  const trackStyles: SystemStyleObject = {\n    display: \"inline-flex\",\n    flexShrink: 0,\n    justifyContent: \"flex-start\",\n    boxSizing: \"content-box\",\n    cursor: \"pointer\",\n    ...styles.track,\n  }\n\n  return (\n    <chakra.label\n      {...htmlProps}\n      className={cx(\"chakra-switch\", props.className)}\n      __css={labelStyles}\n    >\n      <input className=\"chakra-switch__input\" {...inputProps} />\n      <chakra.span\n        {...checkboxProps}\n        className=\"chakra-switch__track\"\n        __css={trackStyles}\n      >\n        <chakra.span\n          __css={styles.thumb}\n          className=\"chakra-switch__thumb\"\n          data-checked={dataAttr(state.isChecked)}\n          data-hover={dataAttr(state.isHovered)}\n        />\n      </chakra.span>\n    </chakra.label>\n  )\n})\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\"\n}\n"],"file":"switch.js"}