{"version":3,"sources":["../../src/use-tooltip.ts"],"names":["useDisclosure","useEventListener","useId","usePopper","callAllHandlers","mergeRefs","React","useTooltip","props","openDelay","closeDelay","closeOnClick","closeOnMouseDown","onOpen","onOpenProp","onClose","onCloseProp","placement","id","isOpen","isOpenProp","defaultIsOpen","arrowSize","arrowShadowColor","arrowPadding","modifiers","isDisabled","gutter","offset","htmlProps","popper","tooltipId","ref","useRef","enterTimeout","exitTimeout","openWithDelay","useCallback","current","window","setTimeout","closeWithDelay","clearTimeout","onClick","onMouseDown","onKeyDown","event","key","useEffect","getTriggerProps","_ref","triggerProps","onMouseEnter","onFocus","onBlur","undefined","getReferenceProps","getTooltipProps","tooltipProps","role","getTooltipPositionerProps","positionerProps","style","transformOrigin","getPopperProps","show","hide","getArrowWrapperProps","getArrowProps"],"mappings":"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","sourcesContent":["import { useDisclosure, useEventListener, useId } from \"@chakra-ui/hooks\"\nimport { Placement, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { callAllHandlers, mergeRefs, PropGetter } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface UseTooltipProps\n  extends Pick<\n    UsePopperProps,\n    | \"arrowSize\"\n    | \"modifiers\"\n    | \"gutter\"\n    | \"offset\"\n    | \"arrowShadowColor\"\n    | \"arrowPadding\"\n  > {\n  /**\n   * Delay (in ms) before showing the tooltip\n   * @default 0ms\n   */\n  openDelay?: number\n  /**\n   * Delay (in ms) before hiding the tooltip\n   * @default 0ms\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse\n   * is down\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * Callback to run when the tooltip shows\n   */\n  onOpen?(): void\n  /**\n   * Callback to run when the tooltip hides\n   */\n  onClose?(): void\n  /**\n   * The Popper.js placement of the tooltip\n   */\n  placement?: Placement\n  /**\n   * Custom `id` to use in place of `uuid`\n   */\n  id?: string\n  /**\n   * If `true`, the tooltip will be shown (in controlled mode)\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown\n   */\n  defaultIsOpen?: boolean\n  isDisabled?: boolean\n}\n\nexport function useTooltip(props: UseTooltipProps = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    ...htmlProps\n  } = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const popper = usePopper({\n    placement,\n    arrowSize,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    gutter,\n    offset,\n  })\n\n  const tooltipId = useId(id, \"tooltip\")\n\n  const ref = React.useRef<any>(null)\n\n  const enterTimeout = React.useRef<number>()\n  const exitTimeout = React.useRef<number>()\n\n  const openWithDelay = React.useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = window.setTimeout(onOpen, openDelay)\n    }\n  }, [isDisabled, onOpen, openDelay])\n\n  const closeWithDelay = React.useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current)\n    }\n    exitTimeout.current = window.setTimeout(onClose, closeDelay)\n  }, [closeDelay, onClose])\n\n  const onClick = React.useCallback(() => {\n    if (closeOnClick) {\n      closeWithDelay()\n    }\n  }, [closeOnClick, closeWithDelay])\n\n  const onMouseDown = React.useCallback(() => {\n    if (closeOnMouseDown) {\n      closeWithDelay()\n    }\n  }, [closeOnMouseDown, closeWithDelay])\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay()\n    }\n  }\n\n  useEventListener(\"keydown\", onKeyDown)\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(enterTimeout.current)\n      clearTimeout(exitTimeout.current)\n    },\n    [],\n  )\n\n  /**\n   * This allows for catching mouseleave events when the tooltip\n   * trigger is disabled. There's currently a known issue in\n   * React regarding the onMouseLeave polyfill.\n   * @see https://github.com/facebook/react/issues/11972\n   */\n  useEventListener(\"mouseleave\", closeWithDelay, ref.current)\n\n  const getTriggerProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps = {\n        ...props,\n        onMouseEnter: callAllHandlers(props.onMouseEnter, openWithDelay),\n        onClick: callAllHandlers(props.onClick, onClick),\n        onMouseDown: callAllHandlers(props.onMouseDown, onMouseDown),\n        onFocus: callAllHandlers(props.onFocus, openWithDelay),\n        onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n        \"aria-describedby\": isOpen ? tooltipId : undefined,\n      }\n\n      return popper.getReferenceProps(triggerProps, mergeRefs(ref, _ref))\n    },\n    [\n      openWithDelay,\n      closeWithDelay,\n      onMouseDown,\n      isOpen,\n      tooltipId,\n      onClick,\n      popper,\n    ],\n  )\n\n  const getTooltipProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      const tooltipProps = {\n        ref: _ref,\n        ...htmlProps,\n        ...props,\n        id: tooltipId,\n        role: \"tooltip\",\n      }\n\n      return tooltipProps\n    },\n    [htmlProps, tooltipId],\n  )\n\n  const getTooltipPositionerProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      const positionerProps = {\n        ...props,\n        style: {\n          ...props.style,\n          transformOrigin: popper.transformOrigin,\n        },\n      }\n      return popper.getPopperProps(positionerProps, _ref)\n    },\n    [popper],\n  )\n\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    transformOrigin: popper.transformOrigin,\n    placement: popper.placement,\n    getArrowWrapperProps: popper.getArrowWrapperProps,\n    getArrowProps: popper.getArrowProps,\n  }\n}\n\nexport type UseTooltipReturn = ReturnType<typeof useTooltip>\n"],"file":"use-tooltip.js"}