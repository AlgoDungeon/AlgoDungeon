declare type Dict = Record<string, any>;
declare function variantLine(props: Dict): {
    tablist: {
        [x: string]: string;
        borderColor: string;
    };
    tab: {
        [x: string]: string | {
            color: any;
            borderColor: string;
            bg?: undefined;
            opacity?: undefined;
            cursor?: undefined;
        } | {
            bg: any;
            color?: undefined;
            borderColor?: undefined;
            opacity?: undefined;
            cursor?: undefined;
        } | {
            opacity: number;
            cursor: string;
            color?: undefined;
            borderColor?: undefined;
            bg?: undefined;
        };
        borderColor: string;
        _selected: {
            color: any;
            borderColor: string;
        };
        _active: {
            bg: any;
        };
        _disabled: {
            opacity: number;
            cursor: string;
        };
    };
};
declare function variantEnclosed(props: Dict): {
    tab: {
        borderTopRadius: string;
        border: string;
        borderColor: string;
        mb: string;
        _selected: {
            color: any;
            borderColor: string;
            borderBottomColor: any;
        };
    };
    tablist: {
        mb: string;
        borderBottom: string;
        borderColor: string;
    };
};
declare function variantEnclosedColored(props: Dict): {
    tab: {
        border: string;
        borderColor: string;
        bg: any;
        mb: string;
        _notLast: {
            mr: string;
        };
        _selected: {
            bg: any;
            color: any;
            borderColor: string;
            borderTopColor: string;
            borderBottomColor: string;
        };
    };
    tablist: {
        mb: string;
        borderBottom: string;
        borderColor: string;
    };
};
declare function variantSoftRounded(props: Dict): {
    tab: {
        borderRadius: string;
        fontWeight: string;
        color: string;
        _selected: {
            color: any;
            bg: any;
        };
    };
};
declare function variantSolidRounded(props: Dict): {
    tab: {
        borderRadius: string;
        fontWeight: string;
        color: any;
        _selected: {
            color: any;
            bg: any;
        };
    };
};
declare const _default: {
    parts: string[];
    baseStyle: (props: Record<string, any>) => {
        root: {
            display: string;
        };
        tab: {
            flex: number | undefined;
            transition: string;
            _focus: {
                zIndex: number;
                boxShadow: string;
            };
        };
        tablist: {
            justifyContent: any;
            flexDirection: string;
        };
        tabpanel: {
            p: number;
        };
    };
    sizes: {
        sm: {
            tab: {
                py: string;
                px: string;
                fontSize: string;
            };
        };
        md: {
            tab: {
                fontSize: string;
                py: string;
                px: string;
            };
        };
        lg: {
            tab: {
                fontSize: string;
                py: string;
                px: string;
            };
        };
    };
    variants: {
        line: typeof variantLine;
        enclosed: typeof variantEnclosed;
        "enclosed-colored": typeof variantEnclosedColored;
        "soft-rounded": typeof variantSoftRounded;
        "solid-rounded": typeof variantSolidRounded;
        unstyled: {};
    };
    defaultProps: {
        size: string;
        variant: string;
        colorScheme: string;
    };
};
export default _default;
