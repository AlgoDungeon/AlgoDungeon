declare const _default: {
    parts: string[];
    baseStyle: {
        table: {
            fontVariantNumeric: string;
            borderCollapse: string;
            width: string;
        };
        th: {
            fontFamily: string;
            fontWeight: string;
            textTransform: string;
            letterSpacing: string;
            textAlign: string;
        };
        td: {
            textAlign: string;
        };
        caption: {
            mt: number;
            fontFamily: string;
            textAlign: string;
            fontWeight: string;
        };
    };
    variants: {
        simple: (props: Record<string, any>) => {
            th: {
                "&[data-is-numeric=true]": {
                    textAlign: string;
                };
                color: any;
                borderBottom: string;
                borderColor: any;
            };
            td: {
                "&[data-is-numeric=true]": {
                    textAlign: string;
                };
                borderBottom: string;
                borderColor: any;
            };
            caption: {
                color: any;
            };
            tfoot: {
                tr: {
                    "&:last-of-type": {
                        th: {
                            borderBottomWidth: number;
                        };
                    };
                };
            };
        };
        striped: (props: Record<string, any>) => {
            th: {
                "&[data-is-numeric=true]": {
                    textAlign: string;
                };
                color: any;
                borderBottom: string;
                borderColor: any;
            };
            td: {
                "&[data-is-numeric=true]": {
                    textAlign: string;
                };
                borderBottom: string;
                borderColor: any;
            };
            caption: {
                color: any;
            };
            tbody: {
                tr: {
                    "&:nth-of-type(odd)": {
                        "th, td": {
                            borderBottomWidth: string;
                            borderColor: any;
                        };
                        td: {
                            background: any;
                        };
                    };
                };
            };
            tfoot: {
                tr: {
                    "&:last-of-type": {
                        th: {
                            borderBottomWidth: number;
                        };
                    };
                };
            };
        };
        unstyled: {};
    };
    sizes: {
        sm: {
            th: {
                px: string;
                py: string;
                lineHeight: string;
                fontSize: string;
            };
            td: {
                px: string;
                py: string;
                fontSize: string;
                lineHeight: string;
            };
            caption: {
                px: string;
                py: string;
                fontSize: string;
            };
        };
        md: {
            th: {
                px: string;
                py: string;
                lineHeight: string;
                fontSize: string;
            };
            td: {
                px: string;
                py: string;
                lineHeight: string;
            };
            caption: {
                px: string;
                py: string;
                fontSize: string;
            };
        };
        lg: {
            th: {
                px: string;
                py: string;
                lineHeight: string;
                fontSize: string;
            };
            td: {
                px: string;
                py: string;
                lineHeight: string;
            };
            caption: {
                px: string;
                py: string;
                fontSize: string;
            };
        };
    };
    defaultProps: {
        variant: string;
        size: string;
        colorScheme: string;
    };
};
export default _default;
