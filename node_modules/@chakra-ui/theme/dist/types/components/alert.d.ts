declare type Dict = Record<string, any>;
declare function variantSubtle(props: Dict): {
    container: {
        bg: any;
    };
    icon: {
        color: any;
    };
};
declare function variantLeftAccent(props: Dict): {
    container: {
        pl: number;
        borderLeft: string;
        borderColor: any;
        bg: any;
    };
    icon: {
        color: any;
    };
};
declare function variantTopAccent(props: Dict): {
    container: {
        pt: number;
        borderTop: string;
        borderColor: any;
        bg: any;
    };
    icon: {
        color: any;
    };
};
declare function variantSolid(props: Dict): {
    container: {
        bg: any;
        color: any;
    };
};
declare const _default: {
    parts: string[];
    baseStyle: {
        container: {
            px: number;
            py: number;
        };
        title: {
            fontWeight: string;
            lineHeight: number;
            mr: number;
        };
        description: {
            lineHeight: number;
        };
        icon: {
            flexShrink: number;
            mr: number;
            w: number;
            h: number;
        };
    };
    variants: {
        subtle: typeof variantSubtle;
        "left-accent": typeof variantLeftAccent;
        "top-accent": typeof variantTopAccent;
        solid: typeof variantSolid;
    };
    defaultProps: {
        variant: string;
    };
};
export default _default;
