{"version":3,"sources":["../../../src/components/badge.ts"],"names":["baseStyle","px","textTransform","fontSize","borderRadius","fontWeight","variantSolid","props","c","colorScheme","theme","dark","bg","color","variantSubtle","darkBg","variantOutline","darkColor","lightColor","boxShadow","variants","solid","subtle","outline","defaultProps","variant"],"mappings":";;;;;AAAA;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,aAAa,EAAE,WAFC;AAGhBC,EAAAA,QAAQ,EAAE,IAHM;AAIhBC,EAAAA,YAAY,EAAE,IAJE;AAKhBC,EAAAA,UAAU,EAAE;AALI,CAAlB;;AAQA,SAASC,YAAT,CAAsBC,KAAtB,EAAkD;AAAA,MAC3BC,CAD2B,GACdD,KADc,CACxCE,WADwC;AAAA,MACxBC,KADwB,GACdH,KADc,CACxBG,KADwB;AAEhD,MAAMC,IAAI,GAAG,gCAAkBH,CAAlB,WAA2B,GAA3B,EAAgCE,KAAhC,CAAb;AACA,SAAO;AACLE,IAAAA,EAAE,EAAE,sBAAQJ,CAAR,WAAiBG,IAAjB,EAAuBJ,KAAvB,CADC;AAELM,IAAAA,KAAK,EAAE,iDAAgCN,KAAhC;AAFF,GAAP;AAID;;AAED,SAASO,aAAT,CAAuBP,KAAvB,EAAmD;AAAA,MAC5BC,CAD4B,GACfD,KADe,CACzCE,WADyC;AAAA,MACzBC,KADyB,GACfH,KADe,CACzBG,KADyB;AAEjD,MAAMK,MAAM,GAAG,gCAAkBP,CAAlB,WAA2B,IAA3B,EAAiCE,KAAjC,CAAf;AACA,SAAO;AACLE,IAAAA,EAAE,EAAE,sBAAQJ,CAAR,WAAiBO,MAAjB,EAAyBR,KAAzB,CADC;AAELM,IAAAA,KAAK,EAAE,sBAAQL,CAAR,WAAoBA,CAApB,WAA6BD,KAA7B;AAFF,GAAP;AAID;;AAED,SAASS,cAAT,CAAwBT,KAAxB,EAAoD;AAAA,MAC7BC,CAD6B,GAChBD,KADgB,CAC1CE,WAD0C;AAAA,MAC1BC,KAD0B,GAChBH,KADgB,CAC1BG,KAD0B;AAElD,MAAMO,SAAS,GAAG,gCAAkBT,CAAlB,WAA2B,GAA3B,EAAgCE,KAAhC,CAAlB;AACA,MAAMQ,UAAU,GAAG,0BAASR,KAAT,EAAmBF,CAAnB,UAAnB;AACA,MAAMK,KAAK,GAAG,sBAAKK,UAAL,EAAiBD,SAAjB,EAA4BV,KAA5B,CAAd;AAEA,SAAO;AACLM,IAAAA,KAAK,EAALA,KADK;AAELM,IAAAA,SAAS,yBAAuBN;AAF3B,GAAP;AAID;;AAED,IAAMO,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAEf,YADQ;AAEfgB,EAAAA,MAAM,EAAER,aAFO;AAGfS,EAAAA,OAAO,EAAEP;AAHM,CAAjB;AAMA,IAAMQ,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,QADU;AAEnBhB,EAAAA,WAAW,EAAE;AAFM,CAArB;eAKe;AACbT,EAAAA,SAAS,EAATA,SADa;AAEboB,EAAAA,QAAQ,EAARA,QAFa;AAGbI,EAAAA,YAAY,EAAZA;AAHa,C","sourcesContent":["import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\"\n\nconst baseStyle = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n}\n\nfunction variantSolid(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const dark = transparentize(`${c}.500`, 0.6)(theme)\n  return {\n    bg: mode(`${c}.500`, dark)(props),\n    color: mode(`white`, `whiteAlpha.800`)(props),\n  }\n}\n\nfunction variantSubtle(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return {\n    bg: mode(`${c}.100`, darkBg)(props),\n    color: mode(`${c}.800`, `${c}.200`)(props),\n  }\n}\n\nfunction variantOutline(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme)\n  const lightColor = getColor(theme, `${c}.500`)\n  const color = mode(lightColor, darkColor)(props)\n\n  return {\n    color,\n    boxShadow: `inset 0 0 0px 1px ${color}`,\n  }\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n}\n\nconst defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\",\n}\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n}\n"],"file":"badge.js"}