{"version":3,"sources":["../../../src/components/modal.ts"],"names":["parts","baseStyleOverlay","bg","zIndex","baseStyleDialogContainer","props","isCentered","scrollBehavior","display","justifyContent","alignItems","overflow","baseStyleDialog","borderRadius","color","my","maxH","undefined","boxShadow","baseStyleHeader","px","py","fontSize","fontWeight","baseStyleCloseButton","position","top","insetEnd","baseStyleBody","flex","baseStyleFooter","baseStyle","overlay","dialogContainer","dialog","header","closeButton","body","footer","getSize","value","maxW","h","sizes","xs","sm","md","lg","xl","full","defaultProps","size"],"mappings":"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","sourcesContent":["import { mode } from \"@chakra-ui/theme-tools\"\n\nconst parts = [\n  \"overlay\",\n  \"dialogContainer\",\n  \"dialog\",\n  \"header\",\n  \"closeButton\",\n  \"body\",\n  \"footer\",\n]\n\nconst baseStyleOverlay = {\n  bg: \"blackAlpha.600\",\n  zIndex: \"modal\",\n}\n\ntype Dict = Record<string, any>\n\nfunction baseStyleDialogContainer(props: Dict) {\n  const { isCentered, scrollBehavior } = props\n\n  return {\n    display: \"flex\",\n    zIndex: \"modal\",\n    justifyContent: \"center\",\n    alignItems: isCentered ? \"center\" : \"flex-start\",\n    overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\",\n  }\n}\n\nfunction baseStyleDialog(props: Dict) {\n  const { scrollBehavior } = props\n\n  return {\n    borderRadius: \"md\",\n    bg: mode(\"white\", \"gray.700\")(props),\n    color: \"inherit\",\n    my: \"3.75rem\",\n    zIndex: \"modal\",\n    maxH: scrollBehavior === \"inside\" ? \"calc(100vh - 7.5rem)\" : undefined,\n    boxShadow: mode(\"lg\", \"dark-lg\")(props),\n  }\n}\n\nconst baseStyleHeader = {\n  px: 6,\n  py: 4,\n  fontSize: \"xl\",\n  fontWeight: \"semibold\",\n}\n\nconst baseStyleCloseButton = {\n  position: \"absolute\",\n  top: 2,\n  insetEnd: 3,\n}\n\nfunction baseStyleBody(props: Dict) {\n  const { scrollBehavior } = props\n  return {\n    px: 6,\n    py: 2,\n    flex: 1,\n    overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined,\n  }\n}\n\nconst baseStyleFooter = {\n  px: 6,\n  py: 4,\n}\n\nconst baseStyle = (props: Dict) => ({\n  overlay: baseStyleOverlay,\n  dialogContainer: baseStyleDialogContainer(props),\n  dialog: baseStyleDialog(props),\n  header: baseStyleHeader,\n  closeButton: baseStyleCloseButton,\n  body: baseStyleBody(props),\n  footer: baseStyleFooter,\n})\n\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\nfunction getSize(value: string) {\n  if (value === \"full\") {\n    return { dialog: { maxW: \"100vw\", h: \"100vh\" } }\n  }\n  return { dialog: { maxW: value } }\n}\n\nconst sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n  xl: getSize(\"xl\"),\n  \"2xl\": getSize(\"2xl\"),\n  \"3xl\": getSize(\"3xl\"),\n  \"4xl\": getSize(\"4xl\"),\n  \"5xl\": getSize(\"5xl\"),\n  \"6xl\": getSize(\"6xl\"),\n  full: getSize(\"full\"),\n}\n\nconst defaultProps = {\n  size: \"md\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"],"file":"modal.js"}