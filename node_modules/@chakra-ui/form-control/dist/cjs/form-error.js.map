{"version":3,"sources":["../../src/form-error.tsx"],"names":["FormErrorMessage","passedProps","ref","styles","props","field","setHasFeedbackText","on","off","isInvalid","_className","className","display","alignItems","text","id","feedbackId","__DEV__","displayName","FormErrorIcon","icon"],"mappings":";;;;;AAAA;;AACA;;AACA;;AAUA;;AACA;;AACA;;;;;;;;;;AAMA;AACA;AACA;AACA;AACO,IAAMA,gBAAgB,gBAAG,wBAC9B,UAACC,WAAD,EAAcC,GAAd,EAAsB;AAAA;;AACpB,MAAMC,MAAM,GAAG,iCAAoB,WAApB,EAAiCF,WAAjC,CAAf;AACA,MAAMG,KAAK,GAAG,8BAAiBH,WAAjB,CAAd;AAEA,MAAMI,KAAK,GAAG,yCAAd;AAEA;AACJ;AACA;AACA;;AACI,kCAAoB,YAAM;AACxBA,IAAAA,KAAK,QAAL,YAAAA,KAAK,CAAEC,kBAAP,CAA0BC,EAA1B;AACA,WAAO;AAAA,aAAMF,KAAN,oBAAMA,KAAK,CAAEC,kBAAP,CAA0BE,GAA1B,EAAN;AAAA,KAAP;AACD,GAHD,EAGG,EAHH;AAKA,MAAI,EAACH,KAAD,YAACA,KAAK,CAAEI,SAAR,CAAJ,EAAuB,OAAO,IAAP;;AAEvB,MAAMC,UAAU,GAAG,eAAG,4BAAH,EAAiCN,KAAK,CAACO,SAAvC,CAAnB;;AAEA,sBACE,oBAAC,sBAAD;AAAgB,IAAA,KAAK,EAAER;AAAvB,kBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,iBAAU,QADZ;AAEE,IAAA,GAAG,EAAED;AAFP,KAGME,KAHN;AAIE,IAAA,KAAK;AACHQ,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,UAAU,EAAE;AAFT,OAGAV,MAAM,CAACW,IAHP,CAJP;AASE,IAAA,SAAS,EAAEJ,UATb;AAUE,IAAA,EAAE,eAAEN,KAAK,CAACW,EAAR,wBAAcV,KAAd,oBAAcA,KAAK,CAAEW;AAVzB,KADF,CADF;AAgBD,CApC6B,CAAzB;;;AAuCP,IAAIC,cAAJ,EAAa;AACXjB,EAAAA,gBAAgB,CAACkB,WAAjB,GAA+B,kBAA/B;AACD;AAED;AACA;AACA;AACA;;;AACO,IAAMC,aAAa,gBAAG,wBAA6B,UAACf,KAAD,EAAQF,GAAR,EAAgB;AACxE,MAAMC,MAAM,GAAG,wBAAf;AACA,MAAME,KAAK,GAAG,yCAAd;AAEA,MAAI,EAACA,KAAD,YAACA,KAAK,CAAEI,SAAR,CAAJ,EAAuB,OAAO,IAAP;;AAEvB,MAAMC,UAAU,GAAG,eAAG,yBAAH,EAA8BN,KAAK,CAACO,SAApC,CAAnB;;AAEA,sBACE,oBAAC,gBAAD;AACE,IAAA,GAAG,EAAET,GADP;AAEE;AAFF,KAGME,KAHN;AAIE,IAAA,KAAK,EAAED,MAAM,CAACiB,IAJhB;AAKE,IAAA,SAAS,EAAEV;AALb,mBAOE;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,CAAC,EAAC;AAFJ,IAPF,CADF;AAcD,CAtB4B,CAAtB;;;AAwBP,IAAIO,cAAJ,EAAa;AACXE,EAAAA,aAAa,CAACD,WAAd,GAA4B,eAA5B;AACD","sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/hooks\"\nimport Icon, { IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  useStyles,\n  HTMLChakraProps,\n  useMultiStyleConfig,\n  ThemingProps,\n  omitThemingProps,\n  StylesProvider,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useFormControlContext } from \"./form-control\"\n\nexport interface FormErrorMessageProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps {}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instrctions on how to fix it.\n */\nexport const FormErrorMessage = forwardRef<FormErrorMessageProps, \"div\">(\n  (passedProps, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", passedProps)\n    const props = omitThemingProps(passedProps)\n\n    const field = useFormControlContext()\n\n    /**\n     * Notify the field context when the error message is rendered on screen,\n     * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n     */\n    useSafeLayoutEffect(() => {\n      field?.setHasFeedbackText.on()\n      return () => field?.setHasFeedbackText.off()\n    }, [])\n\n    if (!field?.isInvalid) return null\n\n    const _className = cx(\"chakra-form__error-message\", props.className)\n\n    return (\n      <StylesProvider value={styles}>\n        <chakra.div\n          aria-live=\"polite\"\n          ref={ref}\n          {...props}\n          __css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            ...styles.text,\n          }}\n          className={_className}\n          id={props.id ?? field?.feedbackId}\n        />\n      </StylesProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\"\n}\n\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\nexport const FormErrorIcon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const styles = useStyles()\n  const field = useFormControlContext()\n\n  if (!field?.isInvalid) return null\n\n  const _className = cx(\"chakra-form__error-icon\", props.className)\n\n  return (\n    <Icon\n      ref={ref}\n      aria-hidden\n      {...props}\n      __css={styles.icon}\n      className={_className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n      />\n    </Icon>\n  )\n})\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\"\n}\n"],"file":"form-error.js"}