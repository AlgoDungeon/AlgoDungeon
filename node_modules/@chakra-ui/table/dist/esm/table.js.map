{"version":3,"sources":["../../src/table.tsx"],"names":["React","chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","__DEV__","Table","props","ref","styles","className","tableProps","table","displayName","TableCaption","placement","rest","caption","captionSide","Thead","thead","Tbody","tbody","Tfoot","tfoot","Th","isNumeric","th","Tr","tr","Td","td"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\n\nexport interface TableProps extends HTMLChakraProps<\"table\">, ThemingProps {}\n\nexport const Table = forwardRef<TableProps, \"table\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props)\n  const { className, ...tableProps } = omitThemingProps(props)\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.table\n        role=\"table\"\n        ref={ref}\n        __css={styles.table}\n        className={cx(\"chakra-table\", className)}\n        {...tableProps}\n      />\n    </StylesProvider>\n  )\n})\n\nif (__DEV__) {\n  Table.displayName = \"Table\"\n}\n\nexport interface TableCaptionProps extends HTMLChakraProps<\"caption\"> {\n  /**\n   * The placement of the table caption. This sets the `caption-side` CSS attribute.\n   * @default \"bottom\"\n   */\n  placement?: \"top\" | \"bottom\"\n}\n\nexport const TableCaption = forwardRef<TableCaptionProps, \"caption\">(\n  (props, ref) => {\n    const { placement = \"bottom\", ...rest } = props\n    const styles = useStyles()\n    return (\n      <chakra.caption\n        {...rest}\n        ref={ref}\n        __css={{\n          ...styles.caption,\n          captionSide: placement,\n        }}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\"\n}\n\nexport interface TableHeadProps extends HTMLChakraProps<\"thead\"> {}\n\nexport const Thead = forwardRef<TableHeadProps, \"thead\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.thead {...props} ref={ref} __css={styles.thead} />\n})\n\nexport interface TableBodyProps extends HTMLChakraProps<\"tbody\"> {}\n\nexport const Tbody = forwardRef<TableBodyProps, \"tbody\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.tbody {...props} ref={ref} __css={styles.tbody} />\n})\n\nexport interface TableFooterProps extends HTMLChakraProps<\"tfoot\"> {}\n\nexport const Tfoot = forwardRef<TableFooterProps, \"tfoot\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.tfoot {...props} ref={ref} __css={styles.tfoot} />\n})\n\nexport interface TableColumnHeaderProps extends HTMLChakraProps<\"th\"> {\n  /**\n   * Aligns the cell content to the right\n   */\n  isNumeric?: boolean\n}\nexport const Th = forwardRef<TableColumnHeaderProps, \"th\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.th\n        {...rest}\n        ref={ref}\n        __css={styles.th}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n\nexport interface TableRowProps extends HTMLChakraProps<\"tr\"> {}\nexport const Tr = forwardRef<TableRowProps, \"tr\">((props, ref) => {\n  const styles = useStyles()\n\n  return <chakra.tr role=\"row\" {...props} ref={ref} __css={styles.tr} />\n})\n\nexport interface TableCellProps extends HTMLChakraProps<\"td\"> {\n  /**\n   * Aligns the cell content to the right\n   */\n  isNumeric?: boolean\n}\nexport const Td = forwardRef<TableCellProps, \"td\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useStyles()\n\n    return (\n      <chakra.td\n        role=\"gridcell\"\n        {...rest}\n        ref={ref}\n        __css={styles.td}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n"],"file":"table.js"}