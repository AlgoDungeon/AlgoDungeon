{"version":3,"sources":["../../src/use-menu.ts"],"names":["useClickable","useDescendant","useDescendants","useControllableState","useDisclosure","useFocusOnHide","useId","useIds","useOutsideClick","useShortcut","useUpdateEffect","usePopper","addItem","callAllHandlers","createContext","dataAttr","focus","getNextIndex","getNextItemFromSearch","getPrevIndex","getValidChildren","isArray","isString","mergeRefs","mergeWith","normalizeEventKey","removeItem","React","MenuProvider","useMenuContext","strict","name","useMenu","props","id","closeOnSelect","closeOnBlur","autoSelect","isLazy","placement","isOpen","onOpen","onClose","onToggle","menuRef","useRef","buttonRef","ref","handler","event","current","contains","target","popper","focusedIndex","setFocusedIndex","useState","domContext","focusRef","visible","shouldFocus","buttonId","menuId","openAndFocusMenu","useCallback","openAndFocusFirstItem","openAndFocusLastItem","descendants","length","refocus","hasFocusWithin","document","activeElement","shouldRefocus","el","element","preventScroll","onTransitionEnd","forceUpdate","orientation","useMenuButton","externalRef","menu","onClick","action","onKeyDown","eventKey","keyMap","Enter","ArrowDown","ArrowUp","preventDefault","stopPropagation","buttonProps","getReferenceProps","useMenuList","Error","onCharacterPress","key","Tab","Escape","nextIndex","prevIndex","fn","characterHandler","character","nextItem","node","textContent","index","indexOf","menulistProps","children","tabIndex","role","style","transformOrigin","useMenuPositioner","getPopperProps","visibility","useMenuItem","onMouseEnter","onMouseEnterProp","onMouseMove","onMouseMoveProp","onMouseLeave","onMouseLeaveProp","onClickProp","isDisabled","isFocusable","htmlProps","context","disabled","focusable","isFocused","trulyDisabled","tabbable","useMenuOption","type","isChecked","rest","hookProps","optionsProps","useMenuOptionGroup","value","valueProp","defaultValue","onChange","onChangeProp","isRadio","fallback","setValue","selectedValue","nextValue","includes","validChildren","clones","map","child","cloneElement","useMenuState"],"mappings":"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","sourcesContent":["import { useClickable } from \"@chakra-ui/clickable\"\nimport { useDescendant, useDescendants } from \"@chakra-ui/descendant\"\nimport {\n  useControllableState,\n  useDisclosure,\n  UseDisclosureProps,\n  useFocusOnHide,\n  useId,\n  useIds,\n  useOutsideClick,\n  useShortcut,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  addItem,\n  callAllHandlers,\n  createContext,\n  dataAttr,\n  EventKeyMap,\n  focus,\n  getNextIndex,\n  getNextItemFromSearch,\n  getPrevIndex,\n  getValidChildren,\n  isArray,\n  isString,\n  mergeRefs,\n  mergeWith,\n  normalizeEventKey,\n  removeItem,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nconst [MenuProvider, useMenuContext] = createContext<UseMenuReturn>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\nexport { MenuProvider, useMenuContext }\n\nexport interface UseMenuProps extends UsePopperProps, UseDisclosureProps {\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * Performance 🚀:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   */\n  isLazy?: boolean\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props: UseMenuProps) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    isLazy,\n    placement = \"bottom-start\",\n  } = props\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure(props)\n\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = React.useRef<HTMLDivElement>(null)\n  const buttonRef = React.useRef<HTMLButtonElement>(null)\n\n  useOutsideClick({\n    ref: menuRef,\n    handler: (event) => {\n      if (\n        isOpen &&\n        closeOnBlur &&\n        !buttonRef.current?.contains(event.target as HTMLElement)\n      ) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const popper = usePopper({ placement, ...props })\n\n  const [focusedIndex, setFocusedIndex] = React.useState(-1)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const domContext = useDescendants<HTMLDivElement, {}>()\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true,\n  })\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  const openAndFocusMenu = React.useCallback(() => {\n    onOpen()\n    if (menuRef.current) focus(menuRef.current)\n  }, [onOpen, menuRef])\n\n  const openAndFocusFirstItem = React.useCallback(() => {\n    onOpen()\n    setFocusedIndex(0)\n  }, [onOpen, setFocusedIndex])\n\n  const openAndFocusLastItem = React.useCallback(() => {\n    onOpen()\n    setFocusedIndex(domContext.descendants.length - 1)\n  }, [onOpen, setFocusedIndex, domContext.descendants])\n\n  const refocus = React.useCallback(() => {\n    const hasFocusWithin = menuRef.current?.contains(document.activeElement)\n    const shouldRefocus = isOpen && !hasFocusWithin\n\n    if (!shouldRefocus) return\n\n    const el = domContext.descendants[focusedIndex]?.element\n    el?.focus({ preventScroll: true })\n  }, [isOpen, focusedIndex, domContext.descendants])\n\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    domContext,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\n\nexport interface UseMenuButtonProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\nexport function useMenuButton(\n  props: UseMenuButtonProps,\n  externalRef: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  const {\n    isOpen,\n    onClose,\n    autoSelect,\n    popper,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    openAndFocusMenu,\n  } = menu\n\n  const onClick = React.useCallback(() => {\n    if (isOpen) {\n      onClose()\n    } else {\n      const action = autoSelect ? openAndFocusFirstItem : openAndFocusMenu\n      action()\n    }\n  }, [autoSelect, isOpen, onClose, openAndFocusFirstItem, openAndFocusMenu])\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  const buttonProps = {\n    ...props,\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onClick),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n\n  return popper.getReferenceProps(\n    buttonProps,\n    mergeRefs(menu.buttonRef, externalRef),\n  )\n}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\n\nexport interface UseMenuListProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\nexport function useMenuList(\n  props: UseMenuListProps,\n  ref: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    popper,\n    domContext: { descendants },\n    isLazy,\n  } = menu\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const onCharacterPress = useShortcut({\n    preventDefault: (event) => event.key !== \" \",\n  })\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n\n      const keyMap: EventKeyMap = {\n        Tab: (event) => {\n          event.preventDefault()\n        },\n        Escape: onClose,\n        ArrowDown: () => {\n          const nextIndex = getNextIndex(focusedIndex, descendants.length)\n          setFocusedIndex(nextIndex)\n        },\n        ArrowUp: () => {\n          const prevIndex = getPrevIndex(focusedIndex, descendants.length)\n          setFocusedIndex(prevIndex)\n        },\n      }\n\n      const fn = keyMap[eventKey]\n\n      if (fn) {\n        event.preventDefault()\n        fn(event)\n        return\n      }\n\n      const characterHandler = onCharacterPress((character) => {\n        /**\n         * Typeahead: Based on current character pressed,\n         * find the next item to be selected\n         */\n        const nextItem = getNextItemFromSearch(\n          descendants,\n          character,\n          (node) => node.element?.textContent || \"\",\n          descendants[focusedIndex],\n        )\n\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem)\n          setFocusedIndex(index)\n        }\n      })\n\n      characterHandler(event)\n    },\n    [descendants, focusedIndex, onCharacterPress, onClose, setFocusedIndex],\n  )\n\n  const menulistProps: any = {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: !isLazy || isOpen ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: popper.transformOrigin,\n    },\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n\n  return menulistProps\n}\n\nexport function useMenuPositioner(props: any = {}) {\n  const { popper, isOpen } = useMenuContext()\n  return mergeWith(popper.getPopperProps(props), {\n    style: { visibility: isOpen ? \"visible\" : \"hidden\" },\n  })\n}\n\nexport interface UseMenuItemProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {\n  isDisabled?: boolean\n  isFocusable?: boolean\n}\n\nexport function useMenuItem(\n  props: UseMenuItemProps,\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    domContext,\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n  } = menu\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const id = `menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const index = useDescendant({\n    element: ref.current,\n    context: domContext,\n    disabled: isDisabled,\n    focusable: isFocusable,\n  })\n\n  const onMouseEnter = React.useCallback(\n    (event) => {\n      onMouseEnterProp?.(event)\n      if (isDisabled) return\n\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n  )\n\n  const onMouseMove = React.useCallback(\n    (event) => {\n      onMouseMoveProp?.(event)\n      if (document.activeElement !== ref.current) {\n        onMouseEnter(event)\n      }\n    },\n    [onMouseEnter, onMouseMoveProp],\n  )\n\n  const onMouseLeave = React.useCallback(\n    (event) => {\n      onMouseLeaveProp?.(event)\n      if (isDisabled) return\n\n      setFocusedIndex(-1)\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp],\n  )\n\n  const onClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      onClickProp?.(event)\n      /**\n       * Close menu and parent menu's if `closeOnSelect` is set to `true`\n       */\n      if (closeOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, closeOnSelect],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (!isOpen) return\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current)\n    } else if (document.activeElement !== menuRef.current) {\n      menuRef.current?.focus()\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n  const tabbable = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(ref, externalRef),\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...tabbable,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends UseMenuItemProps,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(\n  props: UseMenuOptionProps,\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onClick,\n    isDisabled,\n    isFocusable,\n    type = \"radio\",\n    isChecked,\n    ...rest\n  } = props\n\n  const hookProps = { isDisabled, isFocusable, onClick }\n  const optionsProps = useMenuItem(hookProps, externalRef)\n\n  return {\n    ...rest,\n    ...optionsProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  const onChange = React.useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && isString(value)) {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? removeItem(value, selectedValue)\n          : addItem(value, selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      onChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return React.cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n"],"file":"use-menu.js"}