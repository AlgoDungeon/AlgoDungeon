import * as CSS from "csstype";
import { ResponsiveValue } from "../utils";
export interface ColorProps {
    /**
     * The CSS `color` property
     */
    textColor?: ResponsiveValue<CSS.Property.Color>;
    /**
     * The CSS `color` property
     */
    color?: ResponsiveValue<CSS.Property.Color>;
    /**
     * The CSS `fill` property for icon svgs and paths
     */
    fill?: ResponsiveValue<CSS.Property.Color>;
    /**
     * The CSS `stroke` property for icon svgs and paths
     */
    stroke?: ResponsiveValue<CSS.Property.Color>;
    /**
     * The CSS `opacity` property
     */
    opacity?: ResponsiveValue<CSS.Property.Opacity>;
}
export declare const color: import("../core").Parser;
export declare const colorParser: {
    (props: Record<string, any>): Record<string, any>;
    config: import("../core").PropConfig;
    propNames: string[];
    cache: Map<string, any>;
};
