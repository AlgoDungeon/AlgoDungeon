import * as CSS from "csstype";
import { Length, ResponsiveValue } from "../utils";
/**
 * Types for grid related CSS properties
 */
export interface GridProps {
    /**
     * The CSS `grid-gap` property
     */
    gridGap?: ResponsiveValue<CSS.Property.GridGap<Length>>;
    /**
     * The CSS `grid-column-gap` property
     */
    gridColumnGap?: ResponsiveValue<CSS.Property.GridColumnGap<Length>>;
    /**
     * The CSS `grid-row-gap` property
     */
    gridRowGap?: ResponsiveValue<CSS.Property.GridRowGap<Length>>;
    /**
     * The CSS `grid-column` property
     */
    gridColumnStart?: ResponsiveValue<CSS.Property.GridColumnStart>;
    /**
     * The CSS `grid-column` property
     */
    gridColumnEnd?: ResponsiveValue<CSS.Property.GridColumnEnd>;
    /**
     * The CSS `grid-column` property
     */
    gridColumn?: ResponsiveValue<CSS.Property.GridColumn>;
    /**
     * The CSS `grid-row` property
     */
    gridRow?: ResponsiveValue<CSS.Property.GridRow>;
    /**
     * The CSS `grid-auto-flow` property
     */
    gridAutoFlow?: ResponsiveValue<CSS.Property.GridAutoFlow>;
    /**
     * The CSS `grid-auto-columns` property
     */
    gridAutoColumns?: ResponsiveValue<CSS.Property.GridAutoColumns<Length>>;
    /**
     * The CSS `grid-auto-rows` property
     */
    gridAutoRows?: ResponsiveValue<CSS.Property.GridAutoRows<Length>>;
    /**
     * The CSS `grid-template-columns` property
     */
    gridTemplateColumns?: ResponsiveValue<CSS.Property.GridTemplateColumns<Length>>;
    /**
     * The CSS `grid-template-rows` property
     */
    gridTemplateRows?: ResponsiveValue<CSS.Property.GridTemplateRows<Length>>;
    /**
     * The CSS `grid-template-areas` property
     */
    gridTemplateAreas?: ResponsiveValue<CSS.Property.GridTemplateAreas>;
    /**
     * The CSS `grid-areas` property
     */
    gridArea?: ResponsiveValue<CSS.Property.GridArea>;
    /**
     * The CSS `place-items` property
     */
    placeItems?: ResponsiveValue<CSS.Property.PlaceItems>;
}
export declare const grid: import("../core").Parser;
export declare const gridParser: {
    (props: Record<string, any>): Record<string, any>;
    config: import("../core").PropConfig;
    propNames: string[];
    cache: Map<string, any>;
};
