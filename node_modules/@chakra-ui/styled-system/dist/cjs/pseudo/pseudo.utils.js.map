{"version":3,"sources":["../../../src/pseudo/pseudo.utils.ts"],"names":["parsePseudo","props","next","Object","keys","forEach","prop","propValue","propName","pseudoSelectors"],"mappings":";;;;;AAAA;;AACA;;AAEO,SAASA,WAAT,CAAqBC,KAArB,EAAkC;AACvC,MAAMC,IAAU,GAAG,EAAnB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,UAACC,IAAD,EAAU;AACnC,QAAMC,SAAS,GAAGN,KAAK,CAACK,IAAD,CAAvB;AACA,QAAME,QAAQ,GAAGF,IAAI,IAAIG,uBAAR,GAA0BA,wBAAgBH,IAAhB,CAA1B,GAAkDA,IAAnE;;AAEA,QAAI,qBAASC,SAAT,KAAuB,CAAC,uBAAWA,SAAX,CAA5B,EAAmD;AACjDL,MAAAA,IAAI,CAACM,QAAD,CAAJ,GAAiBR,WAAW,CAACO,SAAD,CAA5B;AACD,KAFD,MAEO;AACLL,MAAAA,IAAI,CAACM,QAAD,CAAJ,GAAiBD,SAAjB;AACD;AACF,GATD;AAWA,SAAOL,IAAP;AACD","sourcesContent":["import { Dict, isObject, isFunction } from \"@chakra-ui/utils\"\nimport { pseudoSelectors } from \"./pseudo.selector\"\n\nexport function parsePseudo(props: Dict) {\n  const next: Dict = {}\n\n  Object.keys(props).forEach((prop) => {\n    const propValue = props[prop]\n    const propName = prop in pseudoSelectors ? pseudoSelectors[prop] : prop\n\n    if (isObject(propValue) && !isFunction(propValue)) {\n      next[propName] = parsePseudo(propValue)\n    } else {\n      next[propName] = propValue\n    }\n  })\n\n  return next\n}\n"],"file":"pseudo.utils.js"}