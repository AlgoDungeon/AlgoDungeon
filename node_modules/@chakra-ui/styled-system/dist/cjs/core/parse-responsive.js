"use strict";

exports.__esModule = true;
exports.parseResponsiveArray = parseResponsiveArray;
exports.parseResponsiveObject = parseResponsiveObject;
exports.createMediaQuery = void 0;

var _lodash = _interopRequireDefault(require("lodash.mergewith"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var createMediaQuery = function createMediaQuery(n) {
  return "@media screen and (min-width: " + n + ")";
};

exports.createMediaQuery = createMediaQuery;

function parseResponsiveArray(options) {
  var mediaQueries = options.mediaQueries,
      styleFunction = options.styleFunction,
      scale = options.scale,
      value = options.value,
      props = options.props;
  var styles = {};
  value.slice(0, mediaQueries.length).forEach(function (value, i) {
    var media = mediaQueries[i];
    var style = styleFunction(value, scale, props);

    if (!media) {
      styles = (0, _lodash["default"])({}, styles, style);
    } else {
      var _merge;

      styles = (0, _lodash["default"])({}, styles, (_merge = {}, _merge[media] = (0, _lodash["default"])({}, styles[media], style), _merge));
    }
  });
  return styles;
}

function parseResponsiveObject(options) {
  var breakpoints = options.breakpoints,
      styleFunction = options.styleFunction,
      scale = options.scale,
      valueObj = options.value,
      props = options.props;
  var styles = {};

  for (var bp in valueObj) {
    var breakpoint = breakpoints[bp];
    var value = valueObj[bp];
    var style = styleFunction(value, scale, props);

    if (!breakpoint) {
      styles = (0, _lodash["default"])({}, styles, style);
    } else {
      var _merge2;

      var media = createMediaQuery(breakpoint);
      styles = (0, _lodash["default"])({}, styles, (_merge2 = {}, _merge2[media] = (0, _lodash["default"])({}, styles[media], style), _merge2));
    }
  }

  return styles;
}
//# sourceMappingURL=parse-responsive.js.map