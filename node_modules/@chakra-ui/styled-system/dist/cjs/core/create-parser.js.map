{"version":3,"sources":["../../../src/core/create-parser.ts"],"names":["defaultBreakpoints","map","n","createParser","config","cache","Map","parse","props","styles","shouldSort","isCacheDisabled","theme","disableStyledSystemCache","prop","styleFunction","value","scale","defaults","bps","get","set","Array","isArray","createMediaQuery","style","mediaQueries","breakpoints","propNames","Object","keys","filter","key","length","forEach"],"mappings":"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","sourcesContent":["import { Dict, memoizedGet as get } from \"@chakra-ui/utils\"\nimport merge from \"lodash.mergewith\"\nimport { sort } from \"../utils\"\nimport {\n  createMediaQuery,\n  parseResponsiveArray,\n  parseResponsiveObject,\n} from \"./parse-responsive\"\nimport { PropConfig } from \"./types\"\n\nconst defaultBreakpoints = [40, 52, 64].map((n) => `${n}em`)\n\nexport function createParser(config: PropConfig) {\n  const cache = new Map<string, any>()\n\n  const parse = (props: Dict) => {\n    let styles: Dict = {}\n    let shouldSort = false\n    const isCacheDisabled = props.theme?.config?.disableStyledSystemCache\n\n    for (const prop in props) {\n      if (!config[prop]) continue\n\n      const styleFunction = config[prop]\n      const value = props[prop]\n      const theme = props.theme ?? {}\n\n      const scale = get(theme, styleFunction.scale, styleFunction.defaults)\n\n      if (typeof value === \"object\") {\n        const bps =\n          (!isCacheDisabled && cache.get(\"breakpoints\")) ||\n          get(theme, \"breakpoints\", defaultBreakpoints)\n\n        cache.set(\"breakpoints\", bps)\n\n        if (Array.isArray(value)) {\n          const bps = (!isCacheDisabled && cache.get(\"media\")) || [\n            null,\n            ...cache.get(\"breakpoints\").map(createMediaQuery),\n          ]\n\n          cache.set(\"media\", bps)\n\n          const style = parseResponsiveArray({\n            mediaQueries: cache.get(\"media\"),\n            styleFunction,\n            scale,\n            value,\n            props,\n          })\n\n          styles = merge(styles, style)\n          continue\n        }\n\n        if (value !== null) {\n          const style = parseResponsiveObject({\n            breakpoints: cache.get(\"breakpoints\"),\n            styleFunction,\n            scale,\n            value,\n            props,\n          })\n          styles = merge(styles, style)\n          shouldSort = true\n        }\n        continue\n      }\n      styles = merge({}, styles, styleFunction(value, scale, props))\n    }\n\n    // sort object-based responsive styles\n    if (shouldSort) {\n      styles = sort(styles)\n    }\n\n    return styles\n  }\n\n  parse.config = config\n  parse.propNames = Object.keys(config)\n  parse.cache = cache\n\n  const keys = Object.keys(config).filter((key) => key !== \"config\")\n\n  if (keys.length > 1) {\n    keys.forEach((key) => {\n      parse[key] = createParser({ [key]: config[key] })\n    })\n  }\n\n  return parse\n}\n"],"file":"create-parser.js"}