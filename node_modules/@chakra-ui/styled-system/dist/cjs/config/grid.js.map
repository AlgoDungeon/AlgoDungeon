{"version":3,"sources":["../../../src/config/grid.ts"],"names":["config","gridGap","t","space","gridColumnGap","gridRowGap","gridColumn","gridRow","gridAutoFlow","gridAutoColumns","gridColumnStart","gridColumnEnd","gridAutoRows","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","placeItems","grid","gridParser"],"mappings":";;;;;AACA;;AACA;;AAEA,IAAMA,MAAc,GAAG;AACrBC,EAAAA,OAAO,EAAEC,SAAEC,KAAF,CAAQ,SAAR,CADY;AAErBC,EAAAA,aAAa,EAAEF,SAAEC,KAAF,CAAQ,eAAR,CAFM;AAGrBE,EAAAA,UAAU,EAAEH,SAAEC,KAAF,CAAQ,YAAR,CAHS;AAIrBG,EAAAA,UAAU,EAAE,IAJS;AAKrBC,EAAAA,OAAO,EAAE,IALY;AAMrBC,EAAAA,YAAY,EAAE,IANO;AAOrBC,EAAAA,eAAe,EAAE,IAPI;AAQrBC,EAAAA,eAAe,EAAE,IARI;AASrBC,EAAAA,aAAa,EAAE,IATM;AAUrBC,EAAAA,YAAY,EAAE,IAVO;AAWrBC,EAAAA,mBAAmB,EAAE,IAXA;AAYrBC,EAAAA,gBAAgB,EAAE,IAZG;AAarBC,EAAAA,iBAAiB,EAAE,IAbE;AAcrBC,EAAAA,QAAQ,EAAE,IAdW;AAerBC,EAAAA,UAAU,EAAE;AAfS,CAAvB;AAkBA;AACA;AACA;;AAkEO,IAAMC,IAAI,GAAG,kBAAOlB,MAAP,CAAb;;AACA,IAAMmB,UAAU,GAAG,wBAAanB,MAAb,CAAnB","sourcesContent":["import * as CSS from \"csstype\"\nimport { createParser, Config, system } from \"../core\"\nimport { Length, ResponsiveValue, t } from \"../utils\"\n\nconst config: Config = {\n  gridGap: t.space(\"gridGap\"),\n  gridColumnGap: t.space(\"gridColumnGap\"),\n  gridRowGap: t.space(\"gridRowGap\"),\n  gridColumn: true,\n  gridRow: true,\n  gridAutoFlow: true,\n  gridAutoColumns: true,\n  gridColumnStart: true,\n  gridColumnEnd: true,\n  gridAutoRows: true,\n  gridTemplateColumns: true,\n  gridTemplateRows: true,\n  gridTemplateAreas: true,\n  gridArea: true,\n  placeItems: true,\n}\n\n/**\n * Types for grid related CSS properties\n */\nexport interface GridProps {\n  /**\n   * The CSS `grid-gap` property\n   */\n  gridGap?: ResponsiveValue<CSS.Property.GridGap<Length>>\n  /**\n   * The CSS `grid-column-gap` property\n   */\n  gridColumnGap?: ResponsiveValue<CSS.Property.GridColumnGap<Length>>\n  /**\n   * The CSS `grid-row-gap` property\n   */\n  gridRowGap?: ResponsiveValue<CSS.Property.GridRowGap<Length>>\n  /**\n   * The CSS `grid-column` property\n   */\n  gridColumnStart?: ResponsiveValue<CSS.Property.GridColumnStart>\n  /**\n   * The CSS `grid-column` property\n   */\n  gridColumnEnd?: ResponsiveValue<CSS.Property.GridColumnEnd>\n  /**\n   * The CSS `grid-column` property\n   */\n  gridColumn?: ResponsiveValue<CSS.Property.GridColumn>\n  /**\n   * The CSS `grid-row` property\n   */\n  gridRow?: ResponsiveValue<CSS.Property.GridRow>\n  /**\n   * The CSS `grid-auto-flow` property\n   */\n  gridAutoFlow?: ResponsiveValue<CSS.Property.GridAutoFlow>\n  /**\n   * The CSS `grid-auto-columns` property\n   */\n  gridAutoColumns?: ResponsiveValue<CSS.Property.GridAutoColumns<Length>>\n  /**\n   * The CSS `grid-auto-rows` property\n   */\n  gridAutoRows?: ResponsiveValue<CSS.Property.GridAutoRows<Length>>\n  /**\n   * The CSS `grid-template-columns` property\n   */\n  gridTemplateColumns?: ResponsiveValue<\n    CSS.Property.GridTemplateColumns<Length>\n  >\n  /**\n   * The CSS `grid-template-rows` property\n   */\n  gridTemplateRows?: ResponsiveValue<CSS.Property.GridTemplateRows<Length>>\n  /**\n   * The CSS `grid-template-areas` property\n   */\n  gridTemplateAreas?: ResponsiveValue<CSS.Property.GridTemplateAreas>\n  /**\n   * The CSS `grid-areas` property\n   */\n  gridArea?: ResponsiveValue<CSS.Property.GridArea>\n  /**\n   * The CSS `place-items` property\n   */\n  placeItems?: ResponsiveValue<CSS.Property.PlaceItems>\n}\n\nexport const grid = system(config)\nexport const gridParser = createParser(config)\n"],"file":"grid.js"}