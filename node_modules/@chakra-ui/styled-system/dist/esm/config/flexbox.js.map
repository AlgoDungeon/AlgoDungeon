{"version":3,"sources":["../../../src/config/flexbox.ts"],"names":["createParser","system","t","config","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flex","flexGrow","flexShrink","flexBasis","sizes","justifySelf","alignSelf","order","flexDir","prop","flexbox","flexboxParser"],"mappings":"AACA,SAASA,YAAT,EAA+BC,MAA/B,QAA6C,SAA7C;AACA,SAAkCC,CAAlC,QAA2C,UAA3C;AAEA,IAAMC,MAAc,GAAG;AACrBC,EAAAA,UAAU,EAAE,IADS;AAErBC,EAAAA,YAAY,EAAE,IAFO;AAGrBC,EAAAA,YAAY,EAAE,IAHO;AAIrBC,EAAAA,cAAc,EAAE,IAJK;AAKrBC,EAAAA,QAAQ,EAAE,IALW;AAMrBC,EAAAA,aAAa,EAAE,IANM;AAOrBC,EAAAA,IAAI,EAAE,IAPe;AAQrBC,EAAAA,QAAQ,EAAE,IARW;AASrBC,EAAAA,UAAU,EAAE,IATS;AAUrBC,EAAAA,SAAS,EAAEX,CAAC,CAACY,KAAF,CAAQ,WAAR,CAVU;AAWrBC,EAAAA,WAAW,EAAE,IAXQ;AAYrBC,EAAAA,SAAS,EAAE,IAZU;AAarBC,EAAAA,KAAK,EAAE,IAbc;AAcrBC,EAAAA,OAAO,EAAEhB,CAAC,CAACiB,IAAF,CAAO,eAAP;AAdY,CAAvB;AAiBA;AACA;AACA;;AA4DA,OAAO,IAAMC,OAAO,GAAGnB,MAAM,CAACE,MAAD,CAAtB;AACP,OAAO,IAAMkB,aAAa,GAAGrB,YAAY,CAACG,MAAD,CAAlC","sourcesContent":["import * as CSS from \"csstype\"\nimport { createParser, Config, system } from \"../core\"\nimport { ResponsiveValue, Length, t } from \"../utils\"\n\nconst config: Config = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: t.sizes(\"flexBasis\"),\n  justifySelf: true,\n  alignSelf: true,\n  order: true,\n  flexDir: t.prop(\"flexDirection\"),\n}\n\n/**\n * Types for flexbox related CSS properties\n */\nexport interface FlexboxProps {\n  /**\n   * The CSS `align-items` property\n   */\n  alignItems?: ResponsiveValue<CSS.Property.AlignItems>\n  /**\n   * The CSS `align-content` property\n   */\n  alignContent?: ResponsiveValue<CSS.Property.AlignContent>\n  /**\n   * The CSS `justify-items` property\n   */\n  justifyItems?: ResponsiveValue<CSS.Property.JustifyItems>\n  /**\n   * The CSS `justify-content` property\n   */\n  justifyContent?: ResponsiveValue<CSS.Property.JustifyContent>\n  /**\n   * The CSS `flex-wrap` property\n   */\n  flexWrap?: ResponsiveValue<CSS.Property.FlexWrap>\n  /**\n   * The CSS `flex-basis` property\n   */\n  flexBasis?: ResponsiveValue<CSS.Property.FlexBasis<Length>>\n  /**\n   * The CSS `flex-direction` property\n   */\n  flexDirection?: ResponsiveValue<CSS.Property.FlexDirection>\n  /**\n   * The CSS `flex-direction` property\n   */\n  flexDir?: ResponsiveValue<CSS.Property.FlexDirection>\n  /**\n   * The CSS `flex` property\n   */\n  flex?: ResponsiveValue<CSS.Property.Flex<Length>>\n  /**\n   * The CSS `justify-self` property\n   */\n  justifySelf?: ResponsiveValue<CSS.Property.JustifySelf>\n  /**\n   * The CSS `align-self` property\n   */\n  alignSelf?: ResponsiveValue<CSS.Property.AlignSelf>\n  /**\n   * The CSS `order` property\n   */\n  order?: ResponsiveValue<CSS.Property.Order>\n  /**\n   * The CSS `flex-grow` property\n   */\n  flexGrow?: ResponsiveValue<CSS.Property.FlexGrow>\n  /**\n   * The CSS `flex-shrink` property\n   */\n  flexShrink?: ResponsiveValue<CSS.Property.FlexShrink>\n}\n\nexport const flexbox = system(config)\nexport const flexboxParser = createParser(config)\n"],"file":"flexbox.js"}