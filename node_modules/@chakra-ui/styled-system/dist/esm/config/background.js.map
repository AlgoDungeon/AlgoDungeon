{"version":3,"sources":["../../../src/config/background.ts"],"names":["createParser","system","t","transformGradient","transformBgClip","value","color","backgroundClip","config","bg","colors","bgColor","background","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundBlendMode","property","transform","bgImage","prop","bgImg","bgBlendMode","bgSize","bgPosition","bgPos","bgRepeat","bgAttachment","bgGradient","bgClip","backgroundParser"],"mappings":"AACA,SAASA,YAAT,EAA+BC,MAA/B,QAA6C,SAA7C;AACA,SAAkCC,CAAlC,QAA2C,UAA3C;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAwC;AACtC,SAAOA,KAAK,KAAK,MAAV,GACH;AAAEC,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,cAAc,EAAE;AAAxC,GADG,GAEH;AAAEA,IAAAA,cAAc,EAAEF;AAAlB,GAFJ;AAGD;;AAED,IAAMG,MAAc,GAAG;AACrBC,EAAAA,EAAE,EAAEP,CAAC,CAACQ,MAAF,CAAS,YAAT,CADiB;AAErBC,EAAAA,OAAO,EAAET,CAAC,CAACQ,MAAF,CAAS,iBAAT,CAFY;AAGrBE,EAAAA,UAAU,EAAEV,CAAC,CAACQ,MAAF,CAAS,YAAT,CAHS;AAIrBG,EAAAA,eAAe,EAAEX,CAAC,CAACQ,MAAF,CAAS,iBAAT,CAJI;AAKrBI,EAAAA,eAAe,EAAE,IALI;AAMrBC,EAAAA,cAAc,EAAE,IANK;AAOrBC,EAAAA,kBAAkB,EAAE,IAPC;AAQrBC,EAAAA,gBAAgB,EAAE,IARG;AASrBC,EAAAA,oBAAoB,EAAE,IATD;AAUrBC,EAAAA,mBAAmB,EAAE,IAVA;AAWrBZ,EAAAA,cAAc,EAAE;AACda,IAAAA,QAAQ,EAAE,GADI;AAEdC,IAAAA,SAAS,EAAEjB;AAFG,GAXK;AAerBkB,EAAAA,OAAO,EAAEpB,CAAC,CAACqB,IAAF,CAAO,iBAAP,CAfY;AAgBrBC,EAAAA,KAAK,EAAEtB,CAAC,CAACqB,IAAF,CAAO,iBAAP,CAhBc;AAiBrBE,EAAAA,WAAW,EAAEvB,CAAC,CAACqB,IAAF,CAAO,qBAAP,CAjBQ;AAkBrBG,EAAAA,MAAM,EAAExB,CAAC,CAACqB,IAAF,CAAO,gBAAP,CAlBa;AAmBrBI,EAAAA,UAAU,EAAEzB,CAAC,CAACqB,IAAF,CAAO,oBAAP,CAnBS;AAoBrBK,EAAAA,KAAK,EAAE1B,CAAC,CAACqB,IAAF,CAAO,oBAAP,CApBc;AAqBrBM,EAAAA,QAAQ,EAAE3B,CAAC,CAACqB,IAAF,CAAO,kBAAP,CArBW;AAsBrBO,EAAAA,YAAY,EAAE5B,CAAC,CAACqB,IAAF,CAAO,sBAAP,CAtBO;AAuBrBQ,EAAAA,UAAU,EAAE;AACVX,IAAAA,QAAQ,EAAE,iBADA;AAEVC,IAAAA,SAAS,EAAElB;AAFD,GAvBS;AA2BrB6B,EAAAA,MAAM,EAAE;AACNZ,IAAAA,QAAQ,EAAE,GADJ;AAENC,IAAAA,SAAS,EAAEjB;AAFL;AA3Ba,CAAvB;AAwHA,OAAO,IAAMQ,UAAU,GAAGX,MAAM,CAACO,MAAD,CAAzB;AACP,OAAO,IAAMyB,gBAAgB,GAAGjC,YAAY,CAACQ,MAAD,CAArC","sourcesContent":["import * as CSS from \"csstype\"\nimport { createParser, Config, system } from \"../core\"\nimport { ResponsiveValue, Length, t } from \"../utils\"\nimport { transformGradient } from \"../utils/parse-gradient\"\n\nfunction transformBgClip(value: string) {\n  return value === \"text\"\n    ? { color: \"transparent\", backgroundClip: \"text\" }\n    : { backgroundClip: value }\n}\n\nconst config: Config = {\n  bg: t.colors(\"background\"),\n  bgColor: t.colors(\"backgroundColor\"),\n  background: t.colors(\"background\"),\n  backgroundColor: t.colors(\"backgroundColor\"),\n  backgroundImage: true,\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  backgroundClip: {\n    property: \"&\",\n    transform: transformBgClip,\n  },\n  bgImage: t.prop(\"backgroundImage\"),\n  bgImg: t.prop(\"backgroundImage\"),\n  bgBlendMode: t.prop(\"backgroundBlendMode\"),\n  bgSize: t.prop(\"backgroundSize\"),\n  bgPosition: t.prop(\"backgroundPosition\"),\n  bgPos: t.prop(\"backgroundPosition\"),\n  bgRepeat: t.prop(\"backgroundRepeat\"),\n  bgAttachment: t.prop(\"backgroundAttachment\"),\n  bgGradient: {\n    property: \"backgroundImage\",\n    transform: transformGradient,\n  },\n  bgClip: {\n    property: \"&\",\n    transform: transformBgClip,\n  },\n}\n\nexport interface BackgroundProps {\n  /**\n   * The CSS `background` property\n   */\n  bg?: ResponsiveValue<CSS.Property.Background<Length>>\n  /**\n   * The CSS `background-clip` property\n   */\n  bgClip?: ResponsiveValue<CSS.Property.BackgroundClip | \"text\">\n  /**\n   * The CSS `background-clip` property\n   */\n  backgroundClip?: ResponsiveValue<CSS.Property.BackgroundClip | \"text\">\n  /**\n   * The CSS `background` property\n   */\n  background?: ResponsiveValue<CSS.Property.Background<Length>>\n  /**\n   * The CSS `background-color` property\n   */\n  bgColor?: ResponsiveValue<CSS.Property.BackgroundColor>\n  /**\n   * The CSS `background-color` property\n   */\n  backgroundColor?: ResponsiveValue<CSS.Property.BackgroundColor>\n  /**\n   * The CSS `background-image` property\n   */\n  backgroundImage?: ResponsiveValue<CSS.Property.BackgroundImage>\n  /**\n   * The background-gradient shorthand\n   */\n  bgGradient?: ResponsiveValue<CSS.Property.BackgroundImage>\n  /**\n   * The CSS `background-blend-mode` property\n   */\n  backgroundBlendMode?: ResponsiveValue<CSS.Property.BackgroundBlendMode>\n  /**\n   * The CSS `background-blend-mode` property\n   */\n  bgBlendMode?: ResponsiveValue<CSS.Property.BackgroundBlendMode>\n  /**\n   * The CSS `background-size` property\n   */\n  backgroundSize?: ResponsiveValue<CSS.Property.BackgroundSize<Length>>\n  /**\n   * The CSS `background-position` property\n   */\n  bgPos?: ResponsiveValue<CSS.Property.BackgroundPosition<Length>>\n  /**\n   * The CSS `background-position` property\n   */\n  backgroundPosition?: ResponsiveValue<CSS.Property.BackgroundPosition<Length>>\n  /**\n   * The CSS `background-image` property\n   */\n  bgImage?: ResponsiveValue<CSS.Property.BackgroundImage>\n  /**\n   * The CSS `background-image` property\n   */\n  bgImg?: ResponsiveValue<CSS.Property.BackgroundImage>\n  /**\n   * The CSS `background-repeat` property\n   */\n  bgRepeat?: ResponsiveValue<CSS.Property.BackgroundRepeat>\n  /**\n   * The CSS `background-repeat` property\n   */\n  backgroundRepeat?: ResponsiveValue<CSS.Property.BackgroundRepeat>\n  /**\n   * The CSS `background-size` property\n   */\n  bgSize?: ResponsiveValue<CSS.Property.BackgroundSize<Length>>\n  /**\n   * The CSS `background-attachment` property\n   */\n  bgAttachment?: ResponsiveValue<CSS.Property.BackgroundAttachment>\n  /**\n   * The CSS `background-attachment` property\n   */\n  backgroundAttachment?: ResponsiveValue<CSS.Property.BackgroundAttachment>\n  /**\n   * The CSS `background-position` property\n   */\n  bgPosition?: ResponsiveValue<CSS.Property.BackgroundPosition<Length>>\n}\n\nexport const background = system(config)\nexport const backgroundParser = createParser(config)\n"],"file":"background.js"}