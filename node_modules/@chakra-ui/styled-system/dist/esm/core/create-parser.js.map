{"version":3,"sources":["../../../src/core/create-parser.ts"],"names":["memoizedGet","get","merge","sort","createMediaQuery","parseResponsiveArray","parseResponsiveObject","defaultBreakpoints","map","n","createParser","config","cache","Map","parse","props","styles","shouldSort","isCacheDisabled","theme","disableStyledSystemCache","prop","styleFunction","value","scale","defaults","bps","set","Array","isArray","style","mediaQueries","breakpoints","propNames","Object","keys","filter","key","length","forEach"],"mappings":"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","sourcesContent":["import { Dict, memoizedGet as get } from \"@chakra-ui/utils\"\nimport merge from \"lodash.mergewith\"\nimport { sort } from \"../utils\"\nimport {\n  createMediaQuery,\n  parseResponsiveArray,\n  parseResponsiveObject,\n} from \"./parse-responsive\"\nimport { PropConfig } from \"./types\"\n\nconst defaultBreakpoints = [40, 52, 64].map((n) => `${n}em`)\n\nexport function createParser(config: PropConfig) {\n  const cache = new Map<string, any>()\n\n  const parse = (props: Dict) => {\n    let styles: Dict = {}\n    let shouldSort = false\n    const isCacheDisabled = props.theme?.config?.disableStyledSystemCache\n\n    for (const prop in props) {\n      if (!config[prop]) continue\n\n      const styleFunction = config[prop]\n      const value = props[prop]\n      const theme = props.theme ?? {}\n\n      const scale = get(theme, styleFunction.scale, styleFunction.defaults)\n\n      if (typeof value === \"object\") {\n        const bps =\n          (!isCacheDisabled && cache.get(\"breakpoints\")) ||\n          get(theme, \"breakpoints\", defaultBreakpoints)\n\n        cache.set(\"breakpoints\", bps)\n\n        if (Array.isArray(value)) {\n          const bps = (!isCacheDisabled && cache.get(\"media\")) || [\n            null,\n            ...cache.get(\"breakpoints\").map(createMediaQuery),\n          ]\n\n          cache.set(\"media\", bps)\n\n          const style = parseResponsiveArray({\n            mediaQueries: cache.get(\"media\"),\n            styleFunction,\n            scale,\n            value,\n            props,\n          })\n\n          styles = merge(styles, style)\n          continue\n        }\n\n        if (value !== null) {\n          const style = parseResponsiveObject({\n            breakpoints: cache.get(\"breakpoints\"),\n            styleFunction,\n            scale,\n            value,\n            props,\n          })\n          styles = merge(styles, style)\n          shouldSort = true\n        }\n        continue\n      }\n      styles = merge({}, styles, styleFunction(value, scale, props))\n    }\n\n    // sort object-based responsive styles\n    if (shouldSort) {\n      styles = sort(styles)\n    }\n\n    return styles\n  }\n\n  parse.config = config\n  parse.propNames = Object.keys(config)\n  parse.cache = cache\n\n  const keys = Object.keys(config).filter((key) => key !== \"config\")\n\n  if (keys.length > 1) {\n    keys.forEach((key) => {\n      parse[key] = createParser({ [key]: config[key] })\n    })\n  }\n\n  return parse\n}\n"],"file":"create-parser.js"}