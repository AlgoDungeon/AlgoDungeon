import merge from "lodash.mergewith";
export var createMediaQuery = n => "@media screen and (min-width: " + n + ")";
export function parseResponsiveArray(options) {
  var {
    mediaQueries,
    styleFunction,
    scale,
    value,
    props
  } = options;
  var styles = {};
  value.slice(0, mediaQueries.length).forEach((value, i) => {
    var media = mediaQueries[i];
    var style = styleFunction(value, scale, props);

    if (!media) {
      styles = merge({}, styles, style);
    } else {
      styles = merge({}, styles, {
        [media]: merge({}, styles[media], style)
      });
    }
  });
  return styles;
}
export function parseResponsiveObject(options) {
  var {
    breakpoints,
    styleFunction,
    scale,
    value: valueObj,
    props
  } = options;
  var styles = {};

  for (var bp in valueObj) {
    var breakpoint = breakpoints[bp];
    var value = valueObj[bp];
    var style = styleFunction(value, scale, props);

    if (!breakpoint) {
      styles = merge({}, styles, style);
    } else {
      var media = createMediaQuery(breakpoint);
      styles = merge({}, styles, {
        [media]: merge({}, styles[media], style)
      });
    }
  }

  return styles;
}
//# sourceMappingURL=parse-responsive.js.map