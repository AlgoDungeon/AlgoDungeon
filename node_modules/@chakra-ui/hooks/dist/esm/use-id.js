import * as React from "react";
var id = 0;

function genId() {
  id += 1;
  return id;
}
/**
 * Reack hook to generate unique id
 *
 * @param idProp the external id passed from the user
 * @param prefix prefix to append before the id
 */


export function useId(idProp, prefix) {
  var [uuid] = React.useState(() => genId());
  var id = (idProp != null ? idProp : uuid).toString();
  return prefix ? prefix + "-" + id : id;
}
/**
 * Reack hook to generate ids for use in compound components
 *
 * @param idProp the external id passed from the user
 * @param prefixes array of prefixes to use
 *
 * @example
 *
 * ```js
 * const [buttonId, menuId] = useIds("52", "button", "menu")
 *
 * // buttonId will be `button-52`
 * // menuId will be `menu-52`
 * ```
 */

export function useIds(idProp) {
  var id = useId(idProp);

  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    prefixes[_key - 1] = arguments[_key];
  }

  return prefixes.map(prefix => prefix + "-" + id);
}
//# sourceMappingURL=use-id.js.map