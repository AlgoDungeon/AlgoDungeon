import * as React from "react";
import { isBrowser } from "@chakra-ui/utils";
import { useCallbackRef } from "./use-callback-ref";
/**
 * React hook to manage browser event listeners
 *
 * @param event the event name
 * @param handler the event handler function to execute
 * @param doc the dom environment to execute against (defaults to `document`)
 * @param options the event listener options
 */

export function useEventListener(event, handler, env, options) {
  if (env === void 0) {
    env = isBrowser ? document : null;
  }

  var fn = useCallbackRef(handler);
  React.useEffect(() => {
    if (!env) return undefined;
    env.addEventListener(event, fn, options);
    return () => {
      env.removeEventListener(event, fn, options);
    };
  }, [event, env, options, fn]);
  return () => {
    var _env;

    (_env = env) == null ? void 0 : _env.removeEventListener(event, fn, options);
  };
}
//# sourceMappingURL=use-event-listener.js.map