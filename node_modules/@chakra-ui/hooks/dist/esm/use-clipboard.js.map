{"version":3,"sources":["../../src/use-clipboard.ts"],"names":["useState","useCallback","useEffect","copy","useClipboard","text","timeout","hasCopied","setHasCopied","onCopy","didCopy","timeoutId","window","setTimeout","clearTimeout","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAAoCC,OAApC,EAAoD;AAAA,MAAhBA,OAAgB;AAAhBA,IAAAA,OAAgB,GAAN,IAAM;AAAA;;AACzD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEA,MAAMS,MAAM,GAAGR,WAAW,CAAC,MAAM;AAC/B,QAAMS,OAAO,GAAGP,IAAI,CAACE,IAAD,CAApB;AACAG,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAHyB,EAGvB,CAACL,IAAD,CAHuB,CAA1B;AAKAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,SAAwB,GAAG,IAA/B;;AAEA,QAAIJ,SAAJ,EAAe;AACbI,MAAAA,SAAS,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AAClCL,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAFW,EAETF,OAFS,CAAZ;AAGD;;AAED,WAAO,MAAM;AACX,UAAIK,SAAJ,EAAe;AACbC,QAAAA,MAAM,CAACE,YAAP,CAAoBH,SAApB;AACD;AACF,KAJD;AAKD,GAdQ,EAcN,CAACL,OAAD,EAAUC,SAAV,CAdM,CAAT;AAgBA,SAAO;AAAEQ,IAAAA,KAAK,EAAEV,IAAT;AAAeI,IAAAA,MAAf;AAAuBF,IAAAA;AAAvB,GAAP;AACD","sourcesContent":["import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\n/**\n * React hook to copy content to clipboard\n *\n * @param text the text or value to copy\n * @param timeout delay (in ms) to switch back to initial state once copied.\n */\nexport function useClipboard(text: string, timeout = 1500) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(text)\n    setHasCopied(didCopy)\n  }, [text])\n\n  useEffect(() => {\n    let timeoutId: number | null = null\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n    }\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [timeout, hasCopied])\n\n  return { value: text, onCopy, hasCopied }\n}\n"],"file":"use-clipboard.js"}