{"version":3,"sources":["../../src/use-clipboard.ts"],"names":["useClipboard","text","timeout","hasCopied","setHasCopied","onCopy","didCopy","timeoutId","window","setTimeout","clearTimeout","value"],"mappings":";;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,YAAT,CAAsBC,IAAtB,EAAoCC,OAApC,EAAoD;AAAA,MAAhBA,OAAgB;AAAhBA,IAAAA,OAAgB,GAAN,IAAM;AAAA;;AAAA,kBACvB,qBAAS,KAAT,CADuB;AAAA,MAClDC,SADkD;AAAA,MACvCC,YADuC;;AAGzD,MAAMC,MAAM,GAAG,wBAAY,YAAM;AAC/B,QAAMC,OAAO,GAAG,iCAAKL,IAAL,CAAhB;AACAG,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAHc,EAGZ,CAACL,IAAD,CAHY,CAAf;AAKA,wBAAU,YAAM;AACd,QAAIM,SAAwB,GAAG,IAA/B;;AAEA,QAAIJ,SAAJ,EAAe;AACbI,MAAAA,SAAS,GAAGC,MAAM,CAACC,UAAP,CAAkB,YAAM;AAClCL,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAFW,EAETF,OAFS,CAAZ;AAGD;;AAED,WAAO,YAAM;AACX,UAAIK,SAAJ,EAAe;AACbC,QAAAA,MAAM,CAACE,YAAP,CAAoBH,SAApB;AACD;AACF,KAJD;AAKD,GAdD,EAcG,CAACL,OAAD,EAAUC,SAAV,CAdH;AAgBA,SAAO;AAAEQ,IAAAA,KAAK,EAAEV,IAAT;AAAeI,IAAAA,MAAM,EAANA,MAAf;AAAuBF,IAAAA,SAAS,EAATA;AAAvB,GAAP;AACD","sourcesContent":["import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\n/**\n * React hook to copy content to clipboard\n *\n * @param text the text or value to copy\n * @param timeout delay (in ms) to switch back to initial state once copied.\n */\nexport function useClipboard(text: string, timeout = 1500) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(text)\n    setHasCopied(didCopy)\n  }, [text])\n\n  useEffect(() => {\n    let timeoutId: number | null = null\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n    }\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [timeout, hasCopied])\n\n  return { value: text, onCopy, hasCopied }\n}\n"],"file":"use-clipboard.js"}