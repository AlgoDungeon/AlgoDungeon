{"version":3,"sources":["../../src/use-outside-click.ts"],"names":["useOutsideClick","props","ref","handler","savedHandler","stateRef","isPointerDown","ignoreEmulatedMouseEvents","state","current","onPointerDown","e","isValidEvent","onMouseUp","event","onTouchEnd","document","addEventListener","removeEventListener","target","button","ownerDocument","body","contains"],"mappings":"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","sourcesContent":["import { RefObject, useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\ninterface UseOutsideClickOptions {\n  ref: RefObject<HTMLElement>\n  handler: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickOptions) {\n  const { ref, handler } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", onPointerDown, true)\n    document.addEventListener(\"mouseup\", onMouseUp, true)\n    document.addEventListener(\"touchstart\", onPointerDown, true)\n    document.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      document.removeEventListener(\"mousedown\", onPointerDown, true)\n      document.removeEventListener(\"mouseup\", onMouseUp, true)\n      document.removeEventListener(\"touchstart\", onPointerDown, true)\n      document.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state])\n}\n\nfunction isValidEvent(event: any, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n  if (event.button > 0) return false\n  // if the event target is no longer in the document\n  if (target) {\n    const ownerDocument = target.ownerDocument\n    if (!ownerDocument || !ownerDocument.body.contains(target)) {\n      return false\n    }\n  }\n\n  return ref.current && !ref.current.contains(target)\n}\n"],"file":"use-outside-click.js"}