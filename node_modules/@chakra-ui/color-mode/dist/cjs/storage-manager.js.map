{"version":3,"sources":["../../src/storage-manager.ts"],"names":["hasLocalStorage","Storage","storageKey","localStorageManager","get","init","maybeValue","window","localStorage","getItem","set","value","setItem","type","cookieStorageManager","cookies","match","RegExp","document","cookie"],"mappings":";;;;AAEA,IAAMA,eAAe,GAAG,OAAOC,OAAP,KAAmB,WAA3C;AACO,IAAMC,UAAU,GAAG,sBAAnB;;;AAQP;AACA;AACA;AACO,IAAMC,mBAAmC,GAAG;AACjDC,EAAAA,GADiD,eAC7CC,IAD6C,EACtC;AACT,QAAI,CAACL,eAAL,EAAsB;AACpB,aAAOK,IAAP;AACD;;AAED,QAAMC,UAAU,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,UAA5B,CAAnB;AAEA,WAAOI,UAAP,WAAOA,UAAP,GAAqBD,IAArB;AACD,GATgD;AAUjDK,EAAAA,GAViD,eAU7CC,KAV6C,EAUtC;AACT,QAAIX,eAAJ,EAAqB;AACnBO,MAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BV,UAA5B,EAAwCS,KAAxC;AACD;AACF,GAdgD;AAejDE,EAAAA,IAAI,EAAE;AAf2C,CAA5C;AAkBP;AACA;AACA;;;;AACO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD;AAAA,MAACA,OAAD;AAACA,IAAAA,OAAD,GAAW,EAAX;AAAA;;AAAA,SAAmC;AACrEX,IAAAA,GADqE,eACjEC,IADiE,EAC1D;AACT,UAAMW,KAAK,GAAGD,OAAO,CAACC,KAAR,CAAc,IAAIC,MAAJ,WAAmBf,UAAnB,cAAd,CAAd;;AAEA,UAAIc,KAAJ,EAAW;AACT,eAAOA,KAAK,CAAC,CAAD,CAAZ;AACD;;AAED,aAAOX,IAAP;AACD,KAToE;AAUrEK,IAAAA,GAVqE,eAUjEC,KAViE,EAU1D;AACTO,MAAAA,QAAQ,CAACC,MAAT,GAAqBjB,UAArB,SAAmCS,KAAnC;AACD,KAZoE;AAarEE,IAAAA,IAAI,EAAE;AAb+D,GAAnC;AAAA,CAA7B","sourcesContent":["import { ColorMode } from \"./color-mode.utils\"\n\nconst hasLocalStorage = typeof Storage !== \"undefined\"\nexport const storageKey = \"chakra-ui-color-mode\"\n\nexport interface StorageManager {\n  get(init?: ColorMode): ColorMode | undefined\n  set(value: ColorMode): void\n  type: \"cookie\" | \"localStorage\"\n}\n\n/**\n * Simple object to handle read-write to localStorage\n */\nexport const localStorageManager: StorageManager = {\n  get(init?) {\n    if (!hasLocalStorage) {\n      return init\n    }\n\n    const maybeValue = window.localStorage.getItem(storageKey) as ColorMode\n\n    return maybeValue ?? init\n  },\n  set(value) {\n    if (hasLocalStorage) {\n      window.localStorage.setItem(storageKey, value)\n    }\n  },\n  type: \"localStorage\",\n}\n\n/**\n * Simple object to handle read-write to cookies\n */\nexport const cookieStorageManager = (cookies = \"\"): StorageManager => ({\n  get(init?) {\n    const match = cookies.match(new RegExp(`(^| )${storageKey}=([^;]+)`))\n\n    if (match) {\n      return match[2] as ColorMode\n    }\n\n    return init\n  },\n  set(value) {\n    document.cookie = `${storageKey}=${value}; max-age=31536000; path=/`\n  },\n  type: \"cookie\",\n})\n"],"file":"storage-manager.js"}